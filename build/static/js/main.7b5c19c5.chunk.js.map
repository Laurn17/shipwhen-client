{"version":3,"sources":["components/history.js","config.js","actions/utils.js","local-storage.js","actions/auth.js","components/header-bar.js","components/input.js","components/search-form.js","components/search-page.js","components/select.js","validators.js","actions/bus-reviews.js","components/review-form.js","components/show-hide-review.js","components/need-login.js","components/show-hide-need-login.js","components/review-toggle-page.js","components/landing-page.js","components/review.js","components/bus-page.js","components/no-bus-error.js","components/login-form.js","components/login-page.js","components/signup-form.js","actions/users.js","components/signup-page.js","reducers/auth.js","actions/protected-data.js","reducers/protected-data.js","reducers/bus-reviews.js","store.js","index.js","components/app.js"],"names":["createBrowserHistory","API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","HeaderBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","userIcon","loginSignup","_this","loggedIn","react_default","a","createElement","className","onClick","logOut","Link","to","React","Component","connect","state","auth","Input","prevProps","meta","active","input","focus","warning","touched","htmlFor","name","label","assign","id","placeholder","ref","SearchForm","values","busName","console","log","history","push","onSubmit","handleSubmit","Field","component","normalize","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","disabled","pristine","submitting","noData","busReviews","reduxForm","form","SearchPage","components_search_form","data","reviews","Select","options","keys","map","index","required","undefined","nonEmpty","trim","isTrimmed","FETCH_BUS_REQUEST","getItem","FETCH_BUS_SUCCESS","FETCH_BUS_ERROR","FETCH_BUS_NODATA","FETCH_REVIEW_ERROR","FETCH_REVIEW_SUCCESS","getBus","bus_name","loading","contentType","dataType","fetchBusNoData","bus","submitReview","reason","location","defineProperty","AddReviewForm","toggleForm","created_by","validate","Standard","First-class","Two-day","Overnight","arrive","Fragment","selector","formValueSelector","ShowHideReview","call","setState","showReview","_this2","components_review_form","NeedLogin","ShowHideNeedLogin","showNeedLogin","components_need_login","ReviewTogglePage","show_hide_review","show_hide_need_login","LandingPage","components_search_page","class","review_toggle_page","Review","arrived","estimated","Date","estimate_date","arrive_date","getTime","date_created","delivery","order_date","BusPage","match","params","review","src_components_review","reverse","NoBusError","src","alt","LoginForm","aria-live","onSubmitFail","errors","field","Redirect","components_login_form","passwordLength","min","max","matchesPassword","allValues","SignupForm","firstName","lastName","email","content-type","registerUser","components_signup_form","initialState","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","store","createStore","combineReducers","formReducer","action","protectedData","actions","objectSpread","applyMiddleware","thunk","token","getState","Authorization","_ref2","ReactDOM","render","es","BrowserRouter","Router","components_header_bar","Route","exact","path","LoginPage","SignupPage","document","getElementById"],"mappings":"kiBAEeA,uFCFFC,EACTC,8CAAYC,wBAA0B,8BCI7BC,EAA0B,SAAAC,GACnC,OAAKA,EAAIC,GAcFD,EAZCA,EAAIE,QAAQC,IAAI,iBAChBH,EAAIE,QAAQE,IAAI,gBAAgBC,WAAW,oBAGpCL,EAAIM,OAAOC,KAAK,SAAAC,GAAG,OAAIC,QAAQC,OAAOF,KAG1CC,QAAQC,OAAO,CAClBC,KAAMX,EAAIY,OACVC,QAASb,EAAIc,cCPZC,EAAiB,WAC1B,IACIC,aAAaC,WAAW,aAC1B,MAAOC,MCNAC,EAAiB,iBACjBC,EAAe,SAAAC,GAAS,MAAK,CACtCC,KAAMH,EACNE,cAGSE,EAAa,aACbC,EAAY,iBAAO,CAC5BF,KAAMC,IAGGE,EAAe,eACfC,EAAc,iBAAO,CAC9BJ,KAAMG,IAGGE,EAAe,eAMfC,EAAa,aACbC,EAAY,SAAAC,GAAK,MAAK,CAC/BR,KAAMM,EACNE,UAKEC,EAAgB,SAACV,EAAWW,GAC9B,IAduBC,EAcjBC,EAAeC,IAAUd,GAC/BW,EAASZ,EAAaC,IACtBW,GAhBuBC,EAgBFC,EAAaE,KAhBK,CACvCd,KAAMK,EACNM,iBDtByB,SAAAZ,GACzB,IACIL,aAAaqB,QAAQ,YAAahB,GACpC,MAAOH,KCkCToB,CAAcjB,IAGLkB,EAAQ,SAACC,EAAUC,GAAX,OAAwB,SAAAT,GAEzC,OADAA,EAASN,KAELgB,MAAK,GAAAC,OAAI/C,EAAJ,eAA+B,CAChCgD,OAAQ,OACR1C,QAAS,CACL2C,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBR,WACAC,eAKHlC,KAAK,SAAAP,GAAG,OAAID,EAAwBC,KACpCO,KAAK,SAAAP,GAAG,OAAIA,EAAIM,SAChBC,KAAK,SAAA0C,GAAA,IAAE5B,EAAF4B,EAAE5B,UAAF,OAAiBU,EAAcV,EAAWW,KAC/CkB,MAAM,SAAA1C,GAAO,IAEJK,EACO,MAFEL,EAARG,KAGG,iCACA,oCAIV,OAHAqB,EAASH,EAAUrB,IAGZC,QAAQC,OACX,IAAIyC,IAAgB,CAChBC,OAAQvC,SCjEnBwC,UAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEQR,KAAKS,MAAMlC,SAASR,KACpBT,MAHR,CAAAiD,IAAA,SAAAC,MAAA,WAMa,IACDE,EAQAC,EATCC,EAAAZ,KAsBL,OApBIA,KAAKS,MAAMI,WACXH,EACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOC,QAAS,kBAAMN,EAAKO,WAA7C,cAKoB,IAAxBnB,KAAKS,MAAMI,WACXF,EACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QACdH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,eAAT,WAEJP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QACdH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,gBAAT,cAMRP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,KAAT,cAEJP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVN,EACAD,QAnCzBd,EAAA,CAA+B0B,IAAMC,YA8CtBC,cAJS,SAAAC,GAAK,MAAK,CAC9BZ,SAAqC,OAA3BY,EAAMC,KAAKlD,cAGVgD,CAAyB5B,4BCnDnB+B,6LACEC,IACVA,EAAUC,KAAKC,QAAU9B,KAAKS,MAAMoB,KAAKC,QAC1C9B,KAAK+B,MAAMC,yCAIV,IACD3D,EAKA4D,EANCrB,EAAAZ,KAaL,OAXIA,KAAKS,MAAMoB,KAAKK,SAAWlC,KAAKS,MAAMoB,KAAKxD,QAC3CA,EAAQyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcjB,KAAKS,MAAMoB,KAAKxD,QAIrD2B,KAAKS,MAAMoB,KAAKK,SAAWlC,KAAKS,MAAMoB,KAAKI,UAC3CA,EACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBjB,KAAKS,MAAMoB,KAAKI,UAKnDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOmB,QAASnC,KAAKS,MAAMsB,MAAMK,MAC5BpC,KAAKS,MAAM4B,MACXhE,EACA4D,GAELnB,EAAAC,EAAAC,cAAA,QAAAlB,OAAAwC,OAAA,GACQtC,KAAKS,MAAMsB,MADnB,CAEIQ,GAAIvC,KAAKS,MAAMsB,MAAMK,KACrBvE,KAAMmC,KAAKS,MAAM5C,KACjB2E,YAAaxC,KAAKS,MAAM+B,YACxBC,IAAK,SAAAV,GAAK,OAAKnB,EAAKmB,MAAQA,cAhCbT,IAAMC,WCKnCmB,2LAEKC,GACP,IAAMP,EAAOO,EAAOC,QACpBC,QAAQC,IAAI,oDAAsDV,GAClEW,EAAQC,KAAR,YAAA9D,OAAyBkD,qCAGlB,IAAAxB,EAAAZ,KAYP,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMiC,SAAUjD,KAAKS,MAAMyC,aAAa,SAAAP,GAAM,OAAI/B,EAAKqC,SAASN,MAC9D7B,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YACfrB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAOuE,KAAK,UAAUG,GAAG,UAAUC,YAAY,SAASa,UAf5F,SAAmBC,GAEZ,IADA,IAAIC,EAAWD,EAAIE,cAAcC,MAAM,KAC9BC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAGjCH,EAASG,GAAKH,EAASG,GAAGE,OAAO,GAAGC,cAAgBN,EAASG,GAAGI,UAAU,GAG9E,OAAOP,EAASQ,KAAK,QAQtBjD,EAAAC,EAAAC,cAAA,UAAQnD,KAAK,SAASmG,SAAWhE,KAAKS,MAAMwD,UAAYjE,KAAKS,MAAMyD,YAAnE,mBAzBe5C,IAAMC,YAuC/BmB,EAAalB,YAPW,SAAAC,GACtB,MAAO,CACL0C,OAAQ1C,EAAM2C,WAAWD,OACzB9F,MAAOoD,EAAM2C,WAAW/F,QAIfmD,CAEXkB,GAGa2B,kBAAU,CACvBC,KAAM,UADOD,CAEZ3B,GC/CU6B,UAAb,SAAA1E,GAAA,SAAA0E,IAAA,OAAAzE,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,GAAAzE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAyE,EAAA1E,GAAAC,OAAAQ,EAAA,EAAAR,CAAAyE,EAAA,EAAAhE,IAAA,SAAAC,MAAA,WAGE,OACOM,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,cACJzB,EAAAC,EAAAC,cAACwD,EAAD,WALbD,EAAA,CAAgCjD,IAAMC,YAevBC,cAJS,SAAAC,GAAK,MAAK,CAC9BgD,KAAMhD,EAAM2C,WAAWM,UAGZlD,CAAyB+C,WCOzBI,EA1BO,SAAAlE,GAYpB,OAAIA,GAASA,EAAMmE,QAEf9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BR,EAAM4B,OAC/CvB,EAAAC,EAAAC,cAAA,SAAAlB,OAAAwC,OAAA,GAAY7B,EAAMsB,MAAlB,CAAyBd,UAAU,yCACjCH,EAAAC,EAAAC,cAAA,UAAQR,MAAM,IAAd,UACCV,OAAO+E,KAAKpE,EAAMmE,SAASE,IAjBR,SAACvE,EAAKwE,GAChC,OACEjE,EAAAC,EAAAC,cAAA,UACET,IAAG,GAAArB,OAAK6F,EAAL,KAAA7F,OAAcqB,GACjBC,MAAOD,GAENE,EAAMmE,QAAQrE,QAgBdO,EAAAC,EAAAC,cAAA,aC1BIgE,EAAW,SAAAxE,GAAK,OAAKA,OAAQyE,EAAY,YACzCC,EAAW,SAAA1E,GAAK,MACR,KAAjBA,EAAM2E,YAAgBF,EAAY,mBACzBG,EAAY,SAAA5E,GAAK,OAC1BA,EAAM2E,SAAW3E,OAAQyE,EAAY,+CCK5BI,GAHC9H,aAAa+H,QAAQ,aAGF,qBAMpBC,EAAoB,oBAQpBC,EAAkB,kBAQlBC,GAAmB,mBAQnBC,GAAqB,qBAMrBC,GAAuB,uBASvBC,GAAS,SAACC,GAAD,OAAc,SAAAtH,GAEhC,OADAA,EA7CuC,CACvCV,KAAMwH,EACNS,SAAS,IA6CL7G,MAAK,GAAAC,OAAI/C,EAAJ,aAAA+C,OAA4B2G,GAAY,CACzC1G,OAAQ,MACR4G,YAAa,mBACbC,SAAU,SAEblJ,KAAK,SAAAP,GACF,OAAOA,EAAIM,SAEdC,KAAK,SAAAP,GAOF,OANmB,IAAfA,EAAIoH,SACJd,QAAQC,IAAI,6CACZvE,EApCc,SAACsH,GAAD,MAAe,CACzChI,KAAM4H,GACNK,SAAS,EACT3B,QAAQ,EACR0B,YAgCqBI,CAAc,GAAA/G,OAAI2G,KAC3B9C,EAAQC,KAAK,gBACZlG,KAAK,SAAAC,GAAG,OAAIC,QAAQC,YAElBV,IAEVO,KAAK,SAAAoJ,GACFrD,QAAQC,IAAI,uDACZD,QAAQC,IAAIoD,GACZ3H,EA7DiC,CACzCV,KAAM0H,EACNO,SAAS,EACT3B,QAAQ,EACRO,QAyDiCwB,IACzBnD,EAAQC,KAAR,YAAA9D,OAAyB2G,MAE5BpG,MAAM,SAAA1C,GACFwB,EAzD4B,CACrCV,KAAM2H,EACNM,SAAS,EACTzH,MAAO,6BA4DE8H,GAAe,SAACxD,EAAQhE,GAAT,OAAkB,SAAAJ,GAE1C,OADAoE,EAAOhE,KAAOA,EAEVM,MAAK,GAAAC,OAAI/C,EAAJ,YAA4B,CACzBgD,OAAQ,OACRE,KAAMC,KAAKC,UAAUoD,GACrBlG,QAAS,CACL2C,eAAgB,oBAEpB4G,SAAU,SAEblJ,KAAK,SAAAP,GACE,IAAKA,EAAIC,GAGL,OAFAqG,QAAQC,IAAI,yCACZvE,EA7De,CACnCV,KAAM6H,GACNI,SAAS,IA6DevJ,EAAIE,QAAQC,IAAI,iBAChBH,EAAIE,QACCE,IAAI,gBACJC,WAAW,oBAGTL,EAAIM,OAAOC,KAAK,SAAAC,GAAG,OAAIC,QAAQC,OAAOF,KAG1CC,QAAQC,OAAO,CAClBC,KAAMX,EAAIY,OACVC,QAASb,EAAIc,eAKxBP,KAAK,SAAAP,GACFsG,QAAQC,IAAI,+CACZvE,EA3EqB,CACrCV,KAAM6H,GACNI,SAAS,IA0EOvH,EAASqH,GAAM,GAAA1G,OAAIyD,EAAOkD,cAE7BpG,MAAM,SAAA1C,GAAO,IACHqJ,EAA6BrJ,EAA7BqJ,OAAQhJ,EAAqBL,EAArBK,QAASiJ,EAAYtJ,EAAZsJ,SACxB,MAAe,oBAAXD,EAEOpJ,QAAQC,OACX,IAAIyC,IAAJI,OAAAwG,EAAA,EAAAxG,CAAA,GACKuG,EAAWjJ,KAIjBJ,QAAQC,OACX,IAAIyC,IAAgB,CAChBC,OAAQ,kCC5H9B4G,4LACO5D,EAAQhE,GAGb,OAFAkE,QAAQC,IAAI,0BACZ9C,KAAKS,MAAM+F,aACJxG,KAAKS,MAAMlC,SAAS4H,GAAaxD,EAAQhE,qCAG3C,IAAAiC,EAAAZ,KAECrB,EAAOqB,KAAKS,MAAMgG,WAAW1H,SAYnC,OACI+B,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,QAAMuB,GAAG,aAAatB,UAAU,cAAcgC,SAAUjD,KAAKS,MAAMyC,aAAa,SAAAP,GAAM,OAAI/B,EAAKqC,SAASN,EAAQhE,MAE5GmC,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YAAf,iBACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAOuE,KAAK,WAAWI,YAAY,SAASkE,SAAU,CAAC1B,EAAUE,GAAW7B,UAjBtH,SAAmBC,GAEhB,IADA,IAAIC,EAAWD,EAAIE,cAAcC,MAAM,KAC9BC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAGjCH,EAASG,GAAKH,EAASG,GAAGE,OAAO,GAAGC,cAAgBN,EAASG,GAAGI,UAAU,GAG9E,OAAOP,EAASQ,KAAK,QAWZjD,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YAAf,iBACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWuB,EAAQ9G,KAAK,SAASuE,KAAK,WAAWsE,SAAU,CAAC1B,EAAUE,GACzEN,QAAS,CACL+B,SAAU,WACVC,cAAe,cACfC,UAAW,UACXC,UAAW,eAInBhG,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,cAAf,cACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAOuE,KAAK,aAAasE,SAAU,CAAC1B,EAAUE,KAE5EpE,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,iBAAf,uBACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAOuE,KAAK,gBAAgBsE,SAAU,CAAC1B,EAAUE,KAE/EpE,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,UAAf,mBACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,WAAWuE,KAAK,WAE5CpC,KAAKS,MAAMsG,QACTjG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiG,SAAA,KACIlG,EAAAC,EAAAC,cAAA,SAAOuB,GAAG,oBAAoBJ,QAAQ,eAAtC,gBACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAOuE,KAAK,iBAIlDtB,EAAAC,EAAAC,cAAA,UAAQnD,KAAK,SAASmG,SAAUhE,KAAKS,MAAMwD,UAAYjE,KAAKS,MAAMyD,YAAlE,mBAvDQ5C,IAAMC,YAgElCgF,GAAgBlC,YAAU,CACxBC,KAAM,cADQD,CAEbkC,IAEH,IAAMU,GAAWC,YAAkB,cASpB1F,eAPS,SAAAC,GACtB,MAAO,CACLgF,WAAYhF,EAAMC,KAAKlD,YACvBuI,OAAQE,GAASxF,EAAO,YAIbD,CAEb+E,IC/DaY,sBAvBb,SAAAA,IAAc,IAAAvG,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACZvG,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAC,KAAApH,QAMFwG,WAAa,WACX5F,EAAKyG,SAAS,CAACC,YAAa1G,EAAKa,MAAM6F,cANvC1G,EAAKa,MAAQ,CACX6F,YAAY,GAHF1G,wEAWL,IAAA2G,EAAAvH,KACP,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,QAAS,kBAAMqG,EAAKF,SAAS,CAACC,YAAaC,EAAK9F,MAAM6F,eAC/ExG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAEbjB,KAAKyB,MAAM6F,WAAaxG,EAAAC,EAAAC,cAACwG,GAAD,CAAehB,WAAYxG,KAAKwG,aAAiB,aAlBtDlF,IAAMC,YCUpBkG,4LARV,OACC3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,mDALoBM,IAAMC,YCqBfmG,eAnBb,SAAAA,IAAc,IAAA9G,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,IACZ9G,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4H,GAAAN,KAAApH,QACKyB,MAAQ,CACXkG,eAAe,GAHL/G,wEAOL,IAAA2G,EAAAvH,KACP,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,QAAS,kBAAMqG,EAAKF,SAAS,CAACM,eAAgBJ,EAAK9F,MAAMkG,kBAClF7G,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAEbjB,KAAKyB,MAAMkG,cAAgB7G,EAAAC,EAAAC,cAAC4G,GAAD,MAAgB,aAdrBtG,IAAMC,WCEhCsG,oLAGD,OACI/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACTjB,KAAKS,MAAMgG,WAAa3F,EAAAC,EAAAC,cAAE8G,GAAF,MAAsBhH,EAAAC,EAAAC,cAAC+G,GAAD,cAL9BzG,IAAMC,WAetBC,eAJS,SAAAC,GAAK,MAAK,CAC9BgF,WAAYhF,EAAMC,KAAKlD,cAGZgD,CAAyBqG,ICd3BG,GAAb,SAAAnI,GAAA,SAAAmI,IAAA,OAAAlI,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,GAAAlI,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkI,GAAA7H,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAkI,EAAAnI,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkI,EAAA,EAAAzH,IAAA,SAAAC,MAAA,WAGI,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,kBACNzB,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,gEAGFF,EAAAC,EAAAC,cAAA,WAASuB,GAAG,eACVzB,EAAAC,EAAAC,cAACiH,EAAD,OAGFnH,EAAAC,EAAAC,cAAA,WAASuB,GAAG,uBACVzB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,KAAGkH,MAAM,iBACvCpH,EAAAC,EAAAC,cAAA,sBAFF,uDAEsEF,EAAAC,EAAAC,cAAA,iCAFtE,oRAGEF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAELF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,KAAGkH,MAAM,kBACvCpH,EAAAC,EAAAC,cAAA,sDANF,gIAOEF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAELF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,KAAGkH,MAAM,qBACvCpH,EAAAC,EAAAC,cAAA,gDAVF,4NAaFF,EAAAC,EAAAC,cAAA,WAASuB,GAAG,eACRzB,EAAAC,EAAAC,cAAEmH,GAAF,OAGJrH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,sEAjCVgH,EAAA,CAAiC1G,IAAMC,WA4CxBC,eAJS,SAAAC,GAAK,MAAK,CAC9BgD,KAAMhD,EAAM2C,WAAWM,UAGZlD,CAAyBwG,ICLzBI,4LAvCV,IACIC,EACAlL,EAFEmL,EAAY,IAAIC,KAAKvI,KAAKS,MAAM+H,eAkBtC,OAXYrL,EAJT6C,KAAKS,MAAMgI,aACZJ,EAAU,IAAIE,KAAKvI,KAAKS,MAAMgI,cAEZC,YAAcJ,EAAUI,UACvB5H,EAAAC,EAAAC,cAAA,QAAMuB,GAAG,QAAT,WAEJ8F,EAAUC,EACNxH,EAAAC,EAAAC,cAAA,QAAMuB,GAAG,UAAT,QAECzB,EAAAC,EAAAC,cAAA,QAAMuB,GAAG,SAAT,SAGZzB,EAAAC,EAAAC,cAAA,QAAMuB,GAAG,OAAT,OAIZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOjB,KAAKS,MAAMgG,YAC/B3F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOjB,KAAKS,MAAMkI,cAC/B7H,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgB9D,IAE9B2D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,YACpBF,EAAAC,EAAAC,cAAA,sBAAchB,KAAKS,MAAMoF,UACzB/E,EAAAC,EAAAC,cAAA,2BAAmBhB,KAAKS,MAAMmI,UAC9B9H,EAAAC,EAAAC,cAAA,wBAAgBhB,KAAKS,MAAMoI,YAC3B/H,EAAAC,EAAAC,cAAA,iCAAyBhB,KAAKS,MAAM+H,eACpC1H,EAAAC,EAAAC,cAAA,6BAAqBhB,KAAKS,MAAMsG,OAAS,UAAY,iBACrDjG,EAAAC,EAAAC,cAAA,0BAAkBhB,KAAKS,MAAMgI,YAAczI,KAAKS,MAAMgI,YAAc,gBAnCpDnH,IAAMC,YCIrBuH,uMAGJ,IAAM5C,EAAMlG,KAAKS,MAAMsI,MAAMC,OAAOnD,SACpC7F,KAAKS,MAAMlC,SAASqH,GAAOM,qCAIxB,IAAMxB,EAAU1E,KAAKS,MAAMiE,QAAQI,IAAI,SAACmE,EAAQlE,GAAT,OACnCjE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBV,IAAKwE,GAChCjE,EAAAC,EAAAC,cAACkI,GAADpJ,OAAAwC,OAAA,CAAQyC,MAAOA,GAAWkE,OAIlC,OACInI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,yBAAiBhB,KAAKS,MAAMsI,MAAMC,OAAOnD,UACzC/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACTyD,EAAQyE,QAAQnJ,KAAKS,MAAMkI,eAEhC7H,EAAAC,EAAAC,cAAA,WAASuB,GAAG,eACRzB,EAAAC,EAAAC,cAAEmH,GAAF,eArBK7G,IAAMC,YAiCbC,eALS,SAAAC,GAAK,MAAK,CAC9BiD,QAASjD,EAAM2C,WAAWM,QAC1B+B,WAAYhF,EAAMC,KAAKlD,cAGZgD,CAAyBsH,ICpClCM,4LAEJ,OACCtI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,UAAKhB,KAAKS,MAAMmC,SACV9B,EAAAC,EAAAC,cAAA,OAAKqI,IAAI,UAAUC,IAAI,KACvBxI,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,wFAEDF,EAAAC,EAAAC,cAAA,WAASuB,GAAG,eACjBzB,EAAAC,EAAAC,cAAEmH,GAAF,eAXoB7G,IAAMC,YAwBhBC,eANS,SAAAC,GACvB,MAAO,CACNmB,QAASnB,EAAM2C,WAAWyB,WAIbrE,CAAyB4H,uBCnB3BG,WAAb,SAAA1J,GAAA,SAAA0J,IAAA,OAAAzJ,OAAAC,EAAA,EAAAD,CAAAE,KAAAuJ,GAAAzJ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyJ,GAAApJ,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAyJ,EAAA1J,GAAAC,OAAAQ,EAAA,EAAAR,CAAAyJ,EAAA,EAAAhJ,IAAA,WAAAC,MAAA,SACamC,GACL,OAAO3C,KAAKS,MAAMlC,SAASO,EAAM6D,EAAO5D,SAAU4D,EAAO3D,aAFjE,CAAAuB,IAAA,SAAAC,MAAA,WAKa,IACDnC,EADCuC,EAAAZ,KAUL,OARIA,KAAKS,MAAMpC,QACXA,EACIyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAauI,YAAU,UACjCxJ,KAAKS,MAAMpC,QAMpByC,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,SACJzB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAagC,SAAUjD,KAAKS,MAAMyC,aAAa,SAAAP,GAAM,OACjE/B,EAAKqC,SAASN,MACbtE,EACDyC,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YAAf,YACArB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAOuE,KAAK,WAAWG,GAAG,WAAWC,YAAY,OAAOkE,SAAU,CAAC1B,EAAUE,KAE3GpE,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YAAf,YACArB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,WAAWuE,KAAK,WAAWG,GAAG,WAAWC,YAAY,WAAUkE,SAAU,CAAC1B,EAAUE,KAClHpE,EAAAC,EAAAC,cAAA,UAAQgD,SAAUhE,KAAKS,MAAMwD,UAAYjE,KAAKS,MAAMyD,YAApD,kBA3BpBqF,EAAA,CAA+BjI,IAAMC,YAkCtB8C,eAAU,CACrBC,KAAM,QACNmF,aAAc,SAACC,EAAQnL,GAAT,OAAsBA,EAASyD,aAAM,QAAS,eAFjDqC,CAGZkF,WC1BH,IZhBsB5F,GAQCgG,GYYRnI,eAJS,SAAAC,GAAK,MAAK,CAChCZ,SAAqC,OAA3BY,EAAMC,KAAKlD,cAGRgD,CAnBR,SAAmBf,GAEzB,OAAIA,EAAMI,SACCC,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,CAAUvI,GAAG,MAIpBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,kEACHF,EAAAC,EAAAC,cAAC6I,GAAD,SCRHC,WbHgBnG,GaGQ,CAACoG,IAAK,EAAGC,IAAK,IbHZ,SAAAxJ,GAC5B,OAAImD,GAAOoG,KAAOvJ,EAAMmD,OAASA,GAAOoG,IACpC,oBAAA7K,OAA2ByE,GAAOoG,IAAlC,oBAEApG,GAAOqG,KAAOxJ,EAAMmD,OAASA,GAAOqG,IACpC,mBAAA9K,OAA0ByE,GAAOqG,IAAjC,yBADJ,IaAEC,IbIiBN,GaJS,WbIA,SAACnJ,EAAO0J,GAAR,OAC5BP,MAASO,GAAa1J,EAAM2E,SAAW+E,EAAUP,IAAOxE,YAClDF,EACA,mBaLGkF,GAAb,SAAAtK,GAAA,SAAAsK,IAAA,OAAArK,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,GAAArK,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqK,GAAAhK,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAqK,EAAAtK,GAAAC,OAAAQ,EAAA,EAAAR,CAAAqK,EAAA,EAAA5J,IAAA,WAAAC,MAAA,SACamC,GAAQ,IAAA/B,EAAAZ,KACNjB,EAAkD4D,EAAlD5D,SAAUC,EAAwC2D,EAAxC3D,SAAUoL,EAA8BzH,EAA9ByH,UAAWC,EAAmB1H,EAAnB0H,SAAUC,EAAS3H,EAAT2H,MAC1C3L,EAAO,CAACI,WAAUC,WAAUoL,YAAWC,WAAUC,SACvD,OAAOtK,KAAKS,MACPlC,SCXe,SAAAI,GAAI,OAAI,SAAAJ,GAChC,OAAOU,MAAK,GAAAC,OAAI/C,EAAJ,UAA0B,CAClCgD,OAAQ,OACR1C,QAAS,CACL8N,eAAgB,oBAEpBlL,KAAMC,KAAKC,UAAUZ,KAEpB7B,KAAK,SAAAP,GAAG,OAAID,EAAwBC,KACpCO,KAAK,SAAAP,GAAG,OAAIA,EAAIM,SAChB4C,MAAM,SAAA1C,GAAO,IACHqJ,EAA6BrJ,EAA7BqJ,OAAQhJ,EAAqBL,EAArBK,QAASiJ,EAAYtJ,EAAZsJ,SACxB,GAAe,oBAAXD,EAEA,OAAOpJ,QAAQC,OACX,IAAIyC,IAAJI,OAAAwG,EAAA,EAAAxG,CAAA,GACKuG,EAAWjJ,QDLdoN,CAAa7L,IACtB7B,KAAK,kBAAM8D,EAAKH,MAAMlC,SAASO,EAAMC,EAAUC,QAN5D,CAAAuB,IAAA,SAAAC,MAAA,WASa,IAAA+G,EAAAvH,KACL,OACIc,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,UACJzB,EAAAC,EAAAC,cAAA,QACIC,UAAU,cACVgC,SAAUjD,KAAKS,MAAMyC,aAAa,SAAAP,GAAM,OACpC4E,EAAKtE,SAASN,MAElB7B,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,aAAf,cACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAO2E,YAAY,QAAQJ,KAAK,cAC9DtB,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YAAf,aACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,OAAO2E,YAAY,OAAOJ,KAAK,aAC7DtB,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YAAf,YACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACIC,UAAWzB,EACX9D,KAAK,OACLuE,KAAK,WACLI,YAAY,WACZkE,SAAU,CAAC1B,EAAUE,EAAUE,KAEnCtE,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,SAAf,UACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,UAAWzB,EAAO9D,KAAK,QAAQ2E,YAAY,kBAAkBJ,KAAK,QAAQsE,SAAU,CAAC1B,KAC5FlE,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,YAAf,YACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACIC,UAAWzB,EACX9D,KAAK,WACLuE,KAAK,WACLI,YAAY,WACZkE,SAAU,CAAC1B,EAAU8E,GAAgB1E,KAEzCtE,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,mBAAf,oBACArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACIC,UAAWzB,EACX9D,KAAK,WACLuE,KAAK,kBACLI,YAAY,mBACZkE,SAAU,CAAC1B,EAAUE,EAAU+E,MAEnCnJ,EAAAC,EAAAC,cAAA,UACInD,KAAK,SACLmG,SAAUhE,KAAKS,MAAMwD,UAAYjE,KAAKS,MAAMyD,YAFhD,kBA/CpBiG,EAAA,CAAgC7I,IAAMC,WA0DvB8C,eAAU,CACrBC,KAAM,eACNmF,aAAc,SAACC,EAAQnL,GAAT,OACVA,EAASyD,aAAM,eAAgBlC,OAAO+E,KAAK6E,GAAQ,OAH5CrF,CAIZ8F,WE9CH,IAIe3I,eAJS,SAAAC,GAAK,MAAK,CAChCZ,SAAqC,OAA3BY,EAAMC,KAAKlD,cAGRgD,CAzBR,SAAoBf,GAC1B,OAAIA,EAAMI,SACAC,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,CAAUvI,GAAG,MAIrBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,OAAKsI,IAAI,iBAAiBD,IAAI,qFAEhCvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,GAAG,UACxBzB,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAACyJ,GAAD,kDCZJC,GAAe,CACjB9M,UAAW,KACXY,YAAa,KACbsH,SAAS,EACTzH,MAAO,MCTJ,IAAMsM,GAA+B,+BAM/BC,GAA6B,6BCJpCF,GAAe,CACjBjG,KAAM,GACNpG,MAAO,oBCJLqM,GAAe,CACjB7E,SAAU,KACVnB,QAAS,GACTrG,MAAO,KACP8F,OAAQ,KACR2B,QAAS,MCEb,IAAM+E,GAAQC,aACVC,aAAgB,CACZzG,KAAM0G,KACNtJ,KJEO,WAA+C,IAA9BD,EAA8BrB,UAAAuD,OAAA,QAAAsB,IAAA7E,UAAA,GAAAA,UAAA,GAAtBsK,GAAcO,EAAQ7K,UAAAuD,OAAA,EAAAvD,UAAA,QAAA6E,EAC1D,OAAIgG,EAAOpN,OAASH,EACToC,OAAOwC,OAAO,GAAIb,EAAO,CAC5B7D,UAAWqN,EAAOrN,YAEfqN,EAAOpN,OAASC,EAChBgC,OAAOwC,OAAO,GAAIb,EAAO,CAC5B7D,UAAW,KACXY,YAAa,OAEVyM,EAAOpN,OAASG,EAChB8B,OAAOwC,OAAO,GAAIb,EAAO,CAC5BqE,SAAS,EACTzH,MAAO,OAEJ4M,EAAOpN,OAASK,EAChB4B,OAAOwC,OAAO,GAAIb,EAAO,CAC5BqE,SAAS,EACTtH,YAAayM,EAAOzM,cAEjByM,EAAOpN,OAASM,EAChB2B,OAAOwC,OAAO,GAAIb,EAAO,CAC5BqE,SAAS,EACTzH,MAAO4M,EAAO5M,QAGfoD,GI3BHyJ,cFJO,WAA+C,IAA9BzJ,EAA8BrB,UAAAuD,OAAA,QAAAsB,IAAA7E,UAAA,GAAAA,UAAA,GAAtBsK,GAAcO,EAAQ7K,UAAAuD,OAAA,EAAAvD,UAAA,QAAA6E,EAC1D,OAAIgG,EAAOpN,OAAS8M,GACT7K,OAAOwC,OAAO,GAAIb,EAAO,CAC5BgD,KAAMwG,EAAOxG,KACbpG,MAAO,OAEJ4M,EAAOpN,OAAS+M,GAChB9K,OAAOwC,OAAO,GAAIb,EAAO,CAC5BpD,MAAO4M,EAAO5M,QAGfoD,GENH2C,WDJO,WAAuD,IAA5B3C,EAA4BrB,UAAAuD,OAAA,QAAAsB,IAAA7E,UAAA,GAAAA,UAAA,GAAtBsK,GAAcO,EAAQ7K,UAAAuD,OAAA,EAAAvD,UAAA,QAAA6E,EAClE,OAAIgG,EAAOpN,OAASsN,EACTrL,OAAAsL,GAAA,EAAAtL,CAAA,GAAK2B,EAAZ,CACIqE,SAAS,EACTzH,MAAO,OAGX4M,EAAOpN,OAASsN,EACTrL,OAAOwC,OAAO,GAAIb,EAAO,CAC5BiD,QAAS,CAAC,MACVoB,QAASmF,EAAOnF,QAChBzH,MAAO4M,EAAO5M,QAGlB4M,EAAOpN,OAASsN,GACTrL,OAAOwC,OAAO,GAAIb,EAAO,CAC5BqE,QAASmF,EAAOnF,UAGpBmF,EAAOpN,OAASsN,GACTrL,OAAOwC,OAAO,GAAIb,EAAO,CAC5BoE,SAAUoF,EAAOpF,SACjBC,QAASmF,EAAOnF,QAChB3B,OAAQ8G,EAAO9G,SAGnB8G,EAAOpN,OAASsN,GACTrL,OAAOwC,OAAO,GAAIb,EAAO,CAC5BqE,QAASmF,EAAOnF,UAGfmF,EAAOpN,OAASsN,EACdrL,OAAOwC,OAAO,GAAIb,EAAO,CAC5BiD,QAASuG,EAAOvG,QAChBoB,QAASmF,EAAOnF,UAGjBrE,KC/BP4J,aAAgBC,OAId1N,G3BpBKL,aAAa+H,QAAQ,a2BqBhC,GAAI1H,GAAW,CACX,IAAM2N,GAAQ3N,GACdiN,GAAMtM,SAASZ,EAAa4N,KAC5BV,GAAMtM,S1BuD4B,SAACA,EAAUiN,GAC7CjN,EAASN,KACT,IAAML,EAAY4N,IAAW9J,KAAK9D,UAClC,OAAOqB,MAAK,GAAAC,OAAI/C,EAAJ,iBAAiC,CACzCgD,OAAQ,OACR1C,QAAS,CAELgP,cAAa,UAAAvM,OAAYtB,MAG5Bd,KAAK,SAAAP,GAAG,OAAID,EAAwBC,KACpCO,KAAK,SAAAP,GAAG,OAAIA,EAAIM,SAChBC,KAAK,SAAA4O,GAAA,IAAE9N,EAAF8N,EAAE9N,UAAF,OAAiBU,EAAcV,EAAWW,KAC/CkB,MAAM,SAAA1C,GAIHwB,EAASH,EAAUrB,IACnBwB,EAASR,KACTT,Q0BvEGuN,iBCnBfc,IAASC,OACL9K,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAUhB,MAAOA,IACb/J,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,KACIhL,EAAAC,EAAAC,cCCG,SAAaP,GAExB,OACIK,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAQhJ,QAASA,GACbjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAACgL,EAAD,OAGJlL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI/I,UAAW4E,KACjClH,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqB/I,UAAW0F,KAClDhI,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAe/I,UAAWgG,KAC5CtI,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAc/I,UAAWgJ,KAC3CtL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAe/I,UAAWiJ,SDfpD,QAGRC,SAASC,eAAe","file":"static/js/main.7b5c19c5.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","export const API_BASE_URL =\r\n    process.env.REACT_APP_API_BASE_URL || 'http://www.shipwhen.com/api';\r\n","// Boilerplate code for handling errors from the API.  If the error response\r\n// contains JSON then we return a rejected promise containing the decoded\r\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\r\n// containing the status text.  If there is no error then we continue with\r\n// the promise chain.\r\nexport const normalizeResponseErrors = res => {\r\n    if (!res.ok) {\r\n        if (\r\n            res.headers.has('content-type') &&\r\n            res.headers.get('content-type').startsWith('application/json')\r\n        ) {\r\n            // It's a nice JSON error returned by us, so decode it\r\n            return res.json().then(err => Promise.reject(err));\r\n        }\r\n        // It's a less informative error returned by express\r\n        return Promise.reject({\r\n            code: res.status,\r\n            message: res.statusText\r\n        });\r\n    }\r\n    return res;\r\n};","export const loadAuthToken = () => {\r\n    return localStorage.getItem('authToken');\r\n};\r\n\r\nexport const saveAuthToken = authToken => {\r\n    try {\r\n        localStorage.setItem('authToken', authToken);\r\n    } catch (e) {}\r\n};\r\n\r\nexport const clearAuthToken = () => {\r\n    try {\r\n        localStorage.removeItem('authToken');\r\n    } catch (e) {}\r\n};","import jwtDecode from 'jwt-decode';\r\nimport {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\nimport {saveAuthToken, clearAuthToken} from '../local-storage';\r\n\r\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\r\nexport const setAuthToken = authToken => ({\r\n    type: SET_AUTH_TOKEN,\r\n    authToken\r\n});\r\n\r\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\r\nexport const clearAuth = () => ({\r\n    type: CLEAR_AUTH\r\n});\r\n\r\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\r\nexport const authRequest = () => ({\r\n    type: AUTH_REQUEST\r\n});\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const authSuccess = currentUser => ({\r\n    type: AUTH_SUCCESS,\r\n    currentUser\r\n});\r\n\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const authError = error => ({\r\n    type: AUTH_ERROR,\r\n    error\r\n});\r\n\r\n// Stores the auth token in state and localStorage, and decodes and stores\r\n// the user data stored in the token\r\nconst storeAuthInfo = (authToken, dispatch) => {\r\n    const decodedToken = jwtDecode(authToken);\r\n    dispatch(setAuthToken(authToken));\r\n    dispatch(authSuccess(decodedToken.user));\r\n    saveAuthToken(authToken);\r\n};\r\n\r\nexport const login = (username, password) => dispatch => {\r\n    dispatch(authRequest());\r\n    return (\r\n        fetch(`${API_BASE_URL}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        })\r\n            // Reject any requests which don't return a 200 status, creating\r\n            // errors which follow a consistent format\r\n            .then(res => normalizeResponseErrors(res))\r\n            .then(res => res.json())\r\n            .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n            .catch(err => {\r\n                const {code} = err;\r\n                const message =\r\n                    code === 401\r\n                        ? 'Incorrect username or password'\r\n                        : 'Unable to login, please try again';\r\n                dispatch(authError(err));\r\n                // Could not authenticate, so return a SubmissionError for Redux\r\n                // Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        _error: message\r\n                    })\r\n                );\r\n            })\r\n    );\r\n};\r\n\r\nexport const refreshAuthToken = () => (dispatch, getState) => {\r\n    dispatch(authRequest());\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n            // Provide our existing token as credentials to get a new one\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n        .catch(err => {\r\n            // We couldn't get a refresh token because our current credentials\r\n            // are invalid or expired, or something else went wrong, so clear\r\n            // them and sign us out\r\n            dispatch(authError(err));\r\n            dispatch(clearAuth());\r\n            clearAuthToken(authToken);\r\n        });\r\n};","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {clearAuth} from '../actions/auth';\r\nimport {clearAuthToken} from '../local-storage';\r\n\r\nimport './header-bar.css';\r\n\r\nexport class HeaderBar extends React.Component {\r\n    logOut() {\r\n        this.props.dispatch(clearAuth());\r\n        clearAuthToken();\r\n    }\r\n\r\n    render() {\r\n        let userIcon;\r\n        if (this.props.loggedIn) {\r\n            userIcon = \r\n              <div>\r\n                <button className=\"btwo\" onClick={() => this.logOut()}>Log out</button>\r\n              </div>\r\n        }\r\n      \r\n        let loginSignup;\r\n        if (this.props.loggedIn === false) {\r\n            loginSignup =\r\n                <div>\r\n                    <button className=\"bone\">\r\n                        <Link to=\"/login-page\">Log In</Link>\r\n                    </button>\r\n                    <button className=\"btwo\">\r\n                        <Link to=\"/signup-page\">Sign Up</Link>\r\n                    </button>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n                <div className=\"header-bar\">\r\n                    <h1>\r\n                        <Link to=\"/\">shipwhen?</Link>\r\n                    </h1>\r\n                    <div className=\"headerButtons\">\r\n                        {loginSignup}\r\n                        {userIcon}\r\n                    </div>\r\n                </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(HeaderBar);","import React from 'react';\r\n\r\n// THIS PAGE IS USED IN REVIEW-FORM.JS\r\nexport default class Input extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.meta.active && this.props.meta.active) {\r\n            this.input.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.meta.touched && this.props.meta.error) {\r\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\r\n        }\r\n\r\n        let warning;\r\n        if (this.props.meta.touched && this.props.meta.warning) {\r\n            warning = (\r\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"form-input\">\r\n                <label htmlFor={this.props.input.name}>\r\n                    {this.props.label}\r\n                    {error}\r\n                    {warning}\r\n                </label>\r\n                <input\r\n                    {...this.props.input}\r\n                    id={this.props.input.name}\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    ref={input => (this.input = input)}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, FieldArray, reduxForm} from 'redux-form';\r\nimport Input from './input';\r\nimport history from './history';\r\nimport './search-form.css';\r\n\r\n// --------- THIS FORM IS FOR THE USER TO ENTER A BUS NAME TO THEN RETRIVE IT'S REVIEWS --------\r\nclass SearchForm extends React.Component {\r\n\r\n  onSubmit(values) {\r\n    const name = values.busName;\r\n    console.log(\"Searching for shipping-time reviews on Business: \" + name);\r\n    history.push(`/reviews/${name}`);\r\n  }\r\n\r\n  render() {\r\n    function titleCase(str) {\r\n           var splitStr = str.toLowerCase().split(' ');\r\n           for (var i = 0; i < splitStr.length; i++) {\r\n               // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n               // Assign it back to the array\r\n               splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \r\n           }\r\n           // Directly return the joined string\r\n           return splitStr.join(' '); \r\n        }\r\n\r\n    return (\r\n      <div className=\"searchForm\">\r\n        <form onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\r\n          <label htmlFor=\"busName\"></label>\r\n          <Field component={Input} type=\"text\" name=\"busName\" id=\"busName\" placeholder=\"Amazon\" normalize={titleCase}/>\r\n          <button type=\"submit\" disabled={ this.props.pristine || this.props.submitting} >Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    noData: state.busReviews.noData,\r\n    error: state.busReviews.error\r\n  };\r\n}\r\n\r\nSearchForm = connect(\r\n  mapStateToProps\r\n)(SearchForm);\r\n\r\n\r\nexport default reduxForm({\r\n  form: 'search' \r\n})(SearchForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SearchForm from './search-form';\r\n\r\nimport \"./search-page.css\"\r\n\r\n// ------------------ THIS IS THE SEARCH PAGE TO HOST THE SEARCH FORM ------------------ Used in components/Landing Page\r\nexport class SearchPage extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t        <div id=\"searchPage\">\r\n\t            <SearchForm />  \r\n\t        </div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.busReviews.reviews\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchPage);","import React from 'react';\r\n\r\n// THIS PAGE IS USED IN REVIEW-FORM.JS\r\nexport const Select = props => {\r\n  const renderSelectOptions = (key, index) => {\r\n    return (\r\n      <option\r\n        key={`${index}-${key}`}\r\n        value={key}\r\n      >\r\n        {props.options[key]}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  if (props && props.options) {\r\n    return (\r\n      <div className=\"mv3 w-100\">\r\n        <div className=\"b sans-serif pv2 w-100\">{props.label}</div>\r\n        <select {...props.input} className=\"pa2 input-reset ba b--black-40 w-100\">\r\n          <option value=\"\">Select</option>\r\n          {Object.keys(props.options).map(renderSelectOptions)}\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n  return <div></div>\r\n}\r\n\r\nexport default Select;","export const required = value => (value ? undefined : 'Required');\r\nexport const nonEmpty = value =>\r\n    value.trim() !== '' ? undefined : 'Cannot be empty';\r\nexport const isTrimmed = value =>\r\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\r\nexport const length = length => value => {\r\n    if (length.min && value.length < length.min) {\r\n        return `Must be at least ${length.min} characters long`;\r\n    }\r\n    if (length.max && value.length > length.max) {\r\n        return `Must be at most ${length.max} characters long`;\r\n    }\r\n};\r\nexport const matches = field => (value, allValues) =>\r\n    field in allValues && value.trim() === allValues[field].trim()\r\n        ? undefined\r\n        : 'Does not match';\r\nexport const email = value =>\r\n    /^\\S+@\\S+$/.test(value) ? undefined : 'Must be a valid email address';","\r\nimport {API_BASE_URL} from '../config';\r\nimport {SubmissionError} from 'redux-form';\r\nimport {normalizeResponseErrors} from './utils';\r\nimport history from '../components/history';\r\n\r\nconst token = localStorage.getItem('authToken');\r\n\r\n\r\nexport const FETCH_BUS_REQUEST = 'FETCH_BUS_REQUEST';\r\nexport const fetchBusRequest = loading => ({\r\n    type: FETCH_BUS_REQUEST,\r\n    loading: true\r\n});\r\n\r\nexport const FETCH_BUS_SUCCESS = 'FETCH_BUS_SUCCESS';\r\nexport const fetchBusSuccess = (reviews) => ({\r\n    type: FETCH_BUS_SUCCESS,\r\n    loading: false,\r\n    noData: false,\r\n    reviews\r\n});\r\n\r\nexport const FETCH_BUS_ERROR = 'FETCH_BUS_ERROR';\r\nexport const fetchBusError = (error) => ({\r\n    type: FETCH_BUS_ERROR,\r\n    loading: false,\r\n    error: \"Something went wrong\"\r\n});\r\n\r\n// TRYING TO HANDLE SERVER RESPONSE THAT IS EMPTY\r\nexport const FETCH_BUS_NODATA = 'FETCH_BUS_NODATA';\r\nexport const fetchBusNoData = (bus_name) => ({\r\n    type: FETCH_BUS_NODATA,\r\n    loading: false,\r\n    noData: true,\r\n    bus_name\r\n});\r\n\r\nexport const FETCH_REVIEW_ERROR = 'FETCH_REVIEW_ERROR';\r\nexport const fetchReviewError = () => ({\r\n    type: FETCH_REVIEW_ERROR,\r\n    loading: false\r\n});\r\n\r\nexport const FETCH_REVIEW_SUCCESS = 'FETCH_REVIEW_SUCCESS';\r\nexport const fetchReviewSuccess = () => ({\r\n    type: FETCH_REVIEW_ERROR,\r\n    loading: false\r\n});\r\n\r\n\r\n\r\n// ---------------- GET THE BUSINESS'S REVIEWS FROM SERVER -------------- Used in components/landing-page\r\nexport const getBus = (bus_name) => dispatch => {\r\n    dispatch(fetchBusRequest());\r\n    return (\r\n        fetch(`${API_BASE_URL}/reviews/${bus_name}`, {\r\n            method: 'GET',\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(res => {\r\n            if (res.length === 0) {\r\n                console.log(\"No Business shipping-time review(s) found\");\r\n                dispatch(fetchBusNoData(`${bus_name}`))\r\n                history.push(\"/no-business\")\r\n                .then(err => Promise.reject());\r\n            }\r\n            return res\r\n        })\r\n        .then(bus => {\r\n            console.log(\"Found Business shipping-time review(s) successfully\");\r\n            console.log(bus);\r\n            dispatch(fetchBusSuccess(bus))\r\n            history.push(`/reviews/${bus_name}`);\r\n        })\r\n        .catch(err => {\r\n             dispatch(fetchBusError());\r\n        })\r\n    );\r\n};\r\n\r\n// ---------------- POST THE A BUSINESS REVIEW TO SERVER -------------- Used in components/add-review\r\nexport const submitReview = (values, user) => dispatch => {\r\n    values.user = user;\r\n    return (\r\n        fetch(`${API_BASE_URL}/reviews`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                dataType: 'json'\r\n            })\r\n            .then(res => {\r\n                    if (!res.ok) {\r\n                        console.log(\"Could not submit shipping-time review\");\r\n                        dispatch(fetchReviewError());\r\n                        if (\r\n                            res.headers.has('content-type') &&\r\n                            res.headers\r\n                                .get('content-type')\r\n                                .startsWith('application/json')\r\n                        ) {\r\n                            // It's a nice JSON error returned by us, so decode it\r\n                            return res.json().then(err => Promise.reject(err));\r\n                        }\r\n                        // It's a less informative error returned by express\r\n                        return Promise.reject({\r\n                            code: res.status,\r\n                            message: res.statusText\r\n                        });\r\n                    }\r\n                    return;\r\n                })\r\n                .then(res => {\r\n                    console.log(\"Submitted shipping-time review successfully\");\r\n                    dispatch(fetchReviewSuccess());\r\n                    dispatch(getBus(`${values.bus_name}`));\r\n                })\r\n                .catch(err => {\r\n                    const {reason, message, location} = err;\r\n                    if (reason === 'ValidationError') {\r\n                        // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n                        return Promise.reject(\r\n                            new SubmissionError({\r\n                                [location]: message\r\n                            })\r\n                        );\r\n                    }\r\n                    return Promise.reject(\r\n                        new SubmissionError({\r\n                            _error: 'Error submitting message'\r\n                        })\r\n                    );\r\n                })\r\n    );\r\n};","import React from 'react';\r\nimport {reduxForm, Field, SubmissionError, focus, formValueSelector} from 'redux-form';\r\nimport Input from './input';\r\nimport Select from './select';\r\nimport {required, nonEmpty} from '../validators';\r\nimport {submitReview} from '../actions/bus-reviews';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './review-form.css';\r\n\r\n\r\n// ---------------- THIS FORM IS FOR USERS TO ADD A BUSINESS SHIPPING REVIEW -------------- Used in components/bus-page\r\nclass AddReviewForm extends React.Component {\r\n    onSubmit(values, user) {\r\n        console.log(\"submitting review form\");\r\n        this.props.toggleForm();\r\n        return this.props.dispatch(submitReview(values, user));\r\n    }\r\n\r\n    render() {\r\n\r\n        const user = this.props.created_by.username;\r\n        function titleCase(str) {\r\n           var splitStr = str.toLowerCase().split(' ');\r\n           for (var i = 0; i < splitStr.length; i++) {\r\n               // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n               // Assign it back to the array\r\n               splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \r\n           }\r\n           // Directly return the joined string\r\n           return splitStr.join(' '); \r\n        }\r\n        \r\n        return (\r\n            <div>\r\n\r\n                <form id=\"reviewForm\" className=\"review-form\" onSubmit={this.props.handleSubmit(values => this.onSubmit(values, user))}>\r\n\r\n                    <label htmlFor=\"bus_name\">Business Name</label>\r\n                    <Field component={Input} type=\"text\" name=\"bus_name\" placeholder=\"Amazon\" validate={[required, nonEmpty]} normalize={titleCase} />\r\n                    \r\n                    <label htmlFor=\"delivery\">Delivery Type</label>\r\n                    <Field component={Select} type=\"select\" name=\"delivery\" validate={[required, nonEmpty]}\r\n                        options={{\r\n                            Standard: \"Standard\",\r\n                            \"First-class\": \"First Class\",\r\n                            \"Two-day\": \"Two Day\",\r\n                            Overnight: \"Overnight\"\r\n                        }}\r\n                    />\r\n                    \r\n                    <label htmlFor=\"order_date\">Ordered On</label>\r\n                    <Field component={Input} type=\"Date\" name=\"order_date\" validate={[required, nonEmpty]} />\r\n                    \r\n                    <label htmlFor=\"estimate_date\">Estimated to Arrive</label>\r\n                    <Field component={Input} type=\"Date\" name=\"estimate_date\" validate={[required, nonEmpty]} />\r\n                                 \r\n                    <label htmlFor=\"arrive\">Package Arrived</label>\r\n                    <Field component={Input} type=\"checkbox\" name=\"arrive\" />\r\n\r\n                    { this.props.arrive && (\r\n                        <>\r\n                            <label id=\"arrive-date-label\" htmlFor=\"arrive_date\">Arrival Date</label>\r\n                            <Field component={Input} type=\"Date\" name=\"arrive_date\" />\r\n                        </>\r\n                    ) }     \r\n\r\n                    <button type=\"submit\" disabled={this.props.pristine || this.props.submitting}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nAddReviewForm = reduxForm({\r\n  form: 'reviewForm'\r\n})(AddReviewForm);\r\n\r\nconst selector = formValueSelector('reviewForm');\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    created_by: state.auth.currentUser,\r\n    arrive: selector(state, 'arrive')\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(AddReviewForm);\r\n","import React from 'react';\r\nimport AddReviewForm from './review-form';\r\nimport './show-hide.css';\r\n\r\nclass ShowHideReview extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showReview: false\r\n    };\r\n  };\r\n\r\n  toggleForm = () => {\r\n    this.setState({showReview: !this.state.showReview});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"showHideBody\">\r\n        <div className=\"addButton\" onClick={() => this.setState({showReview: !this.state.showReview})}>\r\n          <i className=\"fas fa-plus\"></i>\r\n        </div>\r\n        { this.state.showReview ? <AddReviewForm toggleForm={this.toggleForm} /> : null }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ShowHideReview;","import React from 'react';\r\nimport './need-login.css';\r\n\r\nclass NeedLogin extends React.Component {\r\n\r\n\trender() {\r\n    \treturn (\r\n    \t\t<div className=\"needLogin\">\r\n\t\t\t\t<h3>Must Login to Submit a Review</h3>\r\n      \t\t</div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nexport default NeedLogin;","import React from 'react';\r\nimport NeedLogin from './need-login';\r\nimport './show-hide.css';\r\n\r\nclass ShowHideNeedLogin extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showNeedLogin: false\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"showHideBody\">\r\n        <div className=\"addButton\" onClick={() => this.setState({showNeedLogin: !this.state.showNeedLogin})}>\r\n          <i className=\"fas fa-plus\"></i>\r\n        </div>\r\n        { this.state.showNeedLogin ? <NeedLogin /> : null }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ShowHideNeedLogin;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ShowHideReview from './show-hide-review';\r\nimport ShowHideNeedLogin from './show-hide-need-login';\r\n// import './review-toggle-page.css';\r\n\r\nclass ReviewTogglePage extends React.Component {\r\n\r\n\trender() {\r\n    \treturn (\r\n\t        <div className=\"review-toggle-page\">\r\n\t            { this.props.created_by ? < ShowHideReview /> : <ShowHideNeedLogin /> }  \r\n\t        </div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    created_by: state.auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(ReviewTogglePage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './landing-page.css';\r\nimport SearchPage from './search-page';\r\nimport ReviewTogglePage from './review-toggle-page';\r\n\r\n// ------------------ THIS IS THE LANDING PAGE USERS FIRST SEE ------------------ Used in components/App\r\nexport class LandingPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing-page\">               \r\n        <div id=\"landing-header\">\r\n          <h1>Actual Shipping Times Revealed</h1>\r\n          <h2>How long will your package really take to arrive?</h2>\r\n        </div>\r\n            \r\n        <section id=\"search-page\">\r\n          <SearchPage />   \r\n        </section>\r\n            \r\n        <section id=\"landing-description\">\r\n          <p>\r\n            <div className=\"landingIcons\"><i class=\"fa fa-truck\"></i></div>\r\n            <b>shipwhen?</b> is the largest shipping times directory to look up <b>estimated vs. actual</b> business shipping times, built by people like YOU, the users. We have the largest, most extensive business search available for finding shipping information. Shipwhen is a free directory of information on when items were ordered, estimated to arrive, and actually arrvied.\r\n            <br/><br/>\r\n\r\n            <div className=\"landingIcons\"><i class=\"far fa-clock\"></i></div>\r\n            <b>Find out average business shipping times.</b> Many companies often send misleading estimated shipping times. Lookup the Business Name to see what others have experienced.\r\n            <br/><br/>\r\n\r\n            <div className=\"landingIcons\"><i class=\"fa fa-thumbs-up\"></i></div>\r\n            <b>Leave positive OR negative reviews.</b> Make it known if a company exaggerated their shipping pace or if your item arrived on time. Leaving a review is the best way to make shipping times public and help others avoid having that special item arrive late!\r\n          </p>\r\n        </section>\r\n        <section id=\"review-page\">\r\n            < ReviewTogglePage />     \r\n        </section>\r\n            \r\n        <footer>\r\n          <p>Copyright © 2019 shipwhen? | All Rights Reserved</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.busReviews.reviews\r\n});\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","import React from 'react';\r\n\r\nimport './review.css';\r\n\r\nclass Review extends React.Component {\r\n    \r\n\trender() {\r\n\t    const estimated = new Date(this.props.estimate_date);\r\n\t    let arrived;\r\n\t    let status;\r\n\t    if(this.props.arrive_date) {\r\n\t      arrived = new Date(this.props.arrive_date);\r\n\t            \r\n\t            if (arrived.getTime() === estimated.getTime()) {\r\n\t                status = <span id=\"blue\">On Time</span>;\r\n\t            }\r\n\t            else if (arrived > estimated) {\r\n\t                status = <span id=\"orange\">Late</span>;\r\n\t            }\r\n\t            else status = <span id=\"green\">Early</span>;\r\n\t    }\r\n\t    else {\r\n\t    \tstatus = <span id=\"red\">N/A</span>;\r\n\t    }\r\n\r\n    \treturn (\r\n\t\t\t<div className=\"reviewPage\">\r\n\t\t\t\t<div className=\"indivReview\">\r\n\t\t\t\t\t<div className=\"revDetails\">\r\n\t\t\t\t\t\t<p className=\"one\">{this.props.created_by}</p>\r\n\t\t\t\t\t\t<p className=\"two\">{this.props.date_created}</p>\r\n\t\t\t\t\t\t<p className=\"three status\">{status}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"hr\"><hr /></div>\r\n\t\t\t\t\t<p>Business: {this.props.bus_name}</p>\r\n\t\t\t\t\t<p>Delivery Type: {this.props.delivery}</p>\r\n\t\t\t\t\t<p>Ordered On: {this.props.order_date}</p>\r\n\t\t\t\t\t<p>Estimated to Arrive: {this.props.estimate_date}</p>\r\n\t\t\t\t\t<p>Package Arrived: {this.props.arrive ? \"Arrived\" : \"Didn't Arrive\"}</p>\r\n\t\t\t\t\t<p>Arrival Date: {this.props.arrive_date ? this.props.arrive_date : \"N/A\"}</p>\r\n\t\t\t\t</div> \r\n\t\t\t</div>\r\n    \t);\r\n    };\r\n};\r\n\r\nexport default Review;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Review from './review';\r\nimport ReviewTogglePage from './review-toggle-page';\r\nimport {getBus} from '../actions/bus-reviews';\r\n\r\nimport './bus-page.css';\r\n\r\nclass BusPage extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst bus = this.props.match.params.bus_name;\r\n\t\tthis.props.dispatch(getBus(bus));\r\n\t}\r\n\r\n\trender() {\r\n\t    const reviews = this.props.reviews.map((review, index) => (\r\n\t        <li className=\"review-wrapper\" key={index}>\r\n\t            <Review index={index} {...review} />\r\n\t        </li>\r\n\t    ));\r\n\r\n\t    return (\r\n\t        <div className=\"busPage\">\r\n\t            <h1>Reviews for {this.props.match.params.bus_name}</h1>\r\n\t            <ul className=\"reviews1\">\r\n\t                {reviews.reverse(this.props.date_created)}\r\n\t            </ul>\r\n\t            <section id=\"review-page\">\r\n\t                < ReviewTogglePage />\t\t\t\r\n\t\t\t\t</section>\r\n\t        </div>\r\n\t    );\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    reviews: state.busReviews.reviews,\r\n    created_by: state.auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(BusPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReviewTogglePage from './review-toggle-page';\r\nimport './no-bus-error.css';\r\n\r\nclass NoBusError extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"noBus-content\">\r\n\t\t\t\t<div className=\"noBus-text\">\r\n\t\t\t\t\t<h1>{this.props.busName}</h1>\r\n\t\t        \t<img src=\"no-data\" alt=\"\" />\r\n\t\t        \t<h2>No shipping-time reviews found</h2>\r\n\t\t        \t<p>Click the \"plus\" icon below to submit a review and help out your community</p>\r\n\t        \t</div>\r\n\t        \t<section id=\"review-page\">\r\n\t\t\t\t\t< ReviewTogglePage />\r\n\t\t\t\t</section>\r\n      \t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tbusName: state.busReviews.bus_name\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(NoBusError);\r\n","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport Input from './input';\r\nimport {login} from '../actions/auth';\r\nimport {required, nonEmpty} from '../validators';\r\nimport './login-form.css';\r\n\r\n\r\n// ---------------- THIS IS THE FORM FOR USERS TO LOGIN --------------\r\n\r\nexport class LoginForm extends React.Component {\r\n    onSubmit(values) {\r\n        return this.props.dispatch(login(values.username, values.password));\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.error) {\r\n            error = (\r\n                <div className=\"form-error\" aria-live=\"polite\">\r\n                    {this.props.error}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"login\">\r\n                <form className=\"login-form\" onSubmit={this.props.handleSubmit(values =>\r\n                    this.onSubmit(values))}>\r\n                    {error}\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <br/>\r\n                    <Field component={Input} type=\"text\" name=\"username\" id=\"username\" placeholder=\"demo\" validate={[required, nonEmpty]} />\r\n                    \r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <br/>\r\n                    <Field component={Input} type=\"password\" name=\"password\" id=\"password\" placeholder=\"DemoUser\"validate={[required, nonEmpty]} />\r\n                    <button disabled={this.props.pristine || this.props.submitting}> Log In </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'login',\r\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\r\n})(LoginForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport LoginForm from './login-form';\r\nimport './login-page.css';\r\n\r\nexport function LoginPage(props) {\r\n\t\r\n\tif (props.loggedIn) {\r\n   \t\treturn <Redirect to=\"/\" />;\r\n    }\r\n    \r\n\treturn (\r\n\t    <div className=\"login-page\">\r\n\t        <h1>Welcome</h1>\r\n\t        <p><b> leaving a shipping-time review helps users like you</b></p>\r\n\t        <LoginForm /> \r\n\t    </div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(LoginPage);","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport {registerUser} from '../actions/users';\r\nimport {login} from '../actions/auth';\r\nimport Input from './input';\r\nimport {required, nonEmpty, matches, length, isTrimmed} from '../validators';\r\nimport './signup-form.css';\r\n\r\nconst passwordLength = length({min: 7, max: 72});\r\nconst matchesPassword = matches('password');\r\n\r\nexport class SignupForm extends React.Component {\r\n    onSubmit(values) {\r\n        const {username, password, firstName, lastName, email} = values;\r\n        const user = {username, password, firstName, lastName, email};\r\n        return this.props\r\n            .dispatch(registerUser(user))\r\n            .then(() => this.props.dispatch(login(username, password)));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"signup\">\r\n                <form\r\n                    className=\"signup-form\"\r\n                    onSubmit={this.props.handleSubmit(values =>\r\n                        this.onSubmit(values)\r\n                    )}>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <Field component={Input} type=\"text\" placeholder=\"first\" name=\"firstName\" />\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <Field component={Input} type=\"text\" placeholder=\"last\" name=\"lastName\" />\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        validate={[required, nonEmpty, isTrimmed]}\r\n                    />\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <Field component={Input} type=\"email\" placeholder=\"email@email.com\" name=\"email\" validate={[required]} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        validate={[required, passwordLength, isTrimmed]}\r\n                    />\r\n                    <label htmlFor=\"passwordConfirm\">Confirm Password</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"password\"\r\n                        name=\"passwordConfirm\"\r\n                        placeholder=\"re-type password\"\r\n                        validate={[required, nonEmpty, matchesPassword]}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={this.props.pristine || this.props.submitting}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'registration',\r\n    onSubmitFail: (errors, dispatch) =>\r\n        dispatch(focus('registration', Object.keys(errors)[0]))\r\n})(SignupForm);\r\n","import {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const registerUser = user => dispatch => {\r\n    return fetch(`${API_BASE_URL}/users`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            const {reason, message, location} = err;\r\n            if (reason === 'ValidationError') {\r\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        [location]: message\r\n                    })\r\n                );\r\n            }\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport SignupForm from './signup-form';\r\nimport './signup-page.css';\r\n\r\nexport function SignUpPage(props) {\r\n\tif (props.loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n\treturn (\r\n\t  <div className=\"signup-page\">\r\n      <div className=\"colContainer\">\r\n        <div className=\"col-6 one\">\r\n          <h1>Find Actual Business Shipping Times</h1>\r\n          <img alt=\"shipping truck\" src=\"https://cdn2.iconfinder.com/data/icons/blue-transports-3/262/Untitled-2-512.png\" />\r\n        </div>\r\n        <div className=\"col-6\" id=\"colTwo\">\r\n          <h2>sign up to post helpful reviews</h2>\r\n          <SignupForm /> \r\n        </div>\r\n      </div>\r\n    </div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignUpPage);","import {\r\n    SET_AUTH_TOKEN,\r\n    CLEAR_AUTH,\r\n    AUTH_REQUEST,\r\n    AUTH_SUCCESS,\r\n    AUTH_ERROR\r\n} from '../actions/auth';\r\n\r\nconst initialState = {\r\n    authToken: null, // authToken !== null does not mean it has been validated\r\n    currentUser: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === SET_AUTH_TOKEN) {\r\n        return Object.assign({}, state, {\r\n            authToken: action.authToken\r\n        });\r\n    } else if (action.type === CLEAR_AUTH) {\r\n        return Object.assign({}, state, {\r\n            authToken: null,\r\n            currentUser: null\r\n        });\r\n    } else if (action.type === AUTH_REQUEST) {\r\n        return Object.assign({}, state, {\r\n            loading: true,\r\n            error: null\r\n        });\r\n    } else if (action.type === AUTH_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            currentUser: action.currentUser\r\n        });\r\n    } else if (action.type === AUTH_ERROR) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}","import {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\r\nexport const fetchProtectedDataSuccess = data => ({\r\n    type: FETCH_PROTECTED_DATA_SUCCESS,\r\n    data\r\n});\r\n\r\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\r\nexport const fetchProtectedDataError = error => ({\r\n    type: FETCH_PROTECTED_DATA_ERROR,\r\n    error\r\n});\r\n\r\nexport const fetchProtectedData = () => (dispatch, getState) => {\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/protected`, {\r\n        method: 'GET',\r\n        headers: {\r\n            // Provide our auth token as credentials\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then(({data}) => dispatch(fetchProtectedDataSuccess(data)))\r\n        .catch(err => {\r\n            dispatch(fetchProtectedDataError(err));\r\n        });\r\n};","import {\r\n    FETCH_PROTECTED_DATA_SUCCESS,\r\n    FETCH_PROTECTED_DATA_ERROR\r\n} from '../actions/protected-data';\r\n\r\nconst initialState = {\r\n    data: '',\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            data: action.data,\r\n            error: null\r\n        });\r\n    } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\r\n        return Object.assign({}, state, {\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}","\r\nimport * as actions from '../actions/bus-reviews';\r\n\r\nconst initialState = {\r\n    bus_name: null,\r\n    reviews: [],\r\n    error: null,\r\n    noData: null,\r\n    loading: null\r\n};\r\n\r\nexport default function busReviewsReducer(state=initialState, action) {\r\n    if (action.type === actions.FETCH_BUS_REQUEST) {\r\n        return { ...state,\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n    if (action.type === actions.FETCH_BUS_ERROR) {\r\n        return Object.assign({}, state, {\r\n            reviews: [null],\r\n            loading: action.loading,\r\n            error: action.error\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_REVIEW_ERROR) {\r\n        return Object.assign({}, state, {\r\n            loading: action.loading\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_BUS_NODATA) {\r\n        return Object.assign({}, state, {\r\n            bus_name: action.bus_name,\r\n            loading: action.loading,\r\n            noData: action.noData\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_REVIEW_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            loading: action.loading\r\n        })\r\n    }\r\n    else if (action.type === actions.FETCH_BUS_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            reviews: action.reviews,\r\n            loading: action.loading\r\n        })\r\n    }\r\n    return state;\r\n};","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport {loadAuthToken} from './local-storage';\r\nimport authReducer from './reducers/auth';\r\nimport protectedDataReducer from './reducers/protected-data';\r\nimport {setAuthToken, refreshAuthToken} from './actions/auth';\r\nimport busReviewsReducer from './reducers/bus-reviews';\r\n\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        form: formReducer,\r\n        auth: authReducer,\r\n        protectedData: protectedDataReducer,\r\n        busReviews: busReviewsReducer\r\n    }),\r\n    applyMiddleware(thunk)\r\n);\r\n\r\n// Hydrate the authToken from localStorage if it exist\r\nconst authToken = loadAuthToken();\r\nif (authToken) {\r\n    const token = authToken;\r\n    store.dispatch(setAuthToken(token));\r\n    store.dispatch(refreshAuthToken());\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/app';\nimport store from './store';\nimport './index.css';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport history from './history';\r\nimport HeaderBar from './header-bar';\r\nimport LandingPage from './landing-page';\r\nimport BusPage from './bus-page';\r\nimport NoBusError from './no-bus-error';\r\nimport LoginPage from './login-page';\r\nimport SignupPage from './signup-page';\r\n\r\nimport './app.css';\r\n\r\n// ---------------------- THIS IS MY ROOT COMPONENT ----------------------- Used in index.js\r\nexport default function App(props) {\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <div className=\"app\">\r\n                <header>\r\n                    <HeaderBar />\r\n                </header>\r\n\r\n                <main>\r\n                    <Route exact path=\"/\" component={LandingPage} />\r\n                    <Route exact path=\"/reviews/:bus_name\" component={BusPage} />\r\n                    <Route exact path=\"/no-business\" component={NoBusError} />                        \r\n                    <Route exact path=\"/login-page\" component={LoginPage} />\r\n                    <Route exact path=\"/signup-page\" component={SignupPage} />\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n"],"sourceRoot":""}