{"version":3,"sources":["components/history.js","config.js","actions/utils.js","local-storage.js","actions/auth.js","actions/bus-reviews.js","components/header-bar.js","components/input.js","components/search-form.js","components/search-page.js","components/select.js","validators.js","components/review-form.js","components/show-hide-review.js","components/need-login.js","components/show-hide-need-login.js","components/review-toggle-page.js","components/landing-page.js","components/review.js","components/bus-page.js","components/MyReviews.js","components/no-bus-error.js","components/login-form.js","components/login-page.js","components/signup-form.js","actions/users.js","components/signup-page.js","reducers/auth.js","actions/protected-data.js","reducers/protected-data.js","reducers/bus-reviews.js","store.js","index.js","components/app.js"],"names":["createBrowserHistory","API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","FETCH_BUS_REQUEST","getItem","FETCH_BUS_SUCCESS","FETCH_BUS_ERROR","fetchBusError","loading","FETCH_MYREVIEWS_SUCCESS","FETCH_BUS_NODATA","fetchBusNoData","bus_name","noData","FETCH_REVIEW_ERROR","FETCH_REVIEW_SUCCESS","getBus","contentType","dataType","length","console","log","history","push","bus","reviews","submitReview","values","reason","location","Object","defineProperty","fetchReviews","HeaderBar","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","userIcon","loginSignup","_this","loggedIn","created_by","react_default","a","createElement","className","onClick","getReviews","logOut","Link","to","React","Component","connect","state","auth","Input","prevProps","meta","active","input","focus","warning","touched","htmlFor","name","label","assign","id","placeholder","ref","SearchForm","busName","onSubmit","handleSubmit","Field","component","normalize","str","splitStr","toLowerCase","split","i","charAt","toUpperCase","substring","join","disabled","pristine","submitting","busReviews","reduxForm","form","SearchPage","components_search_form","data","Select","options","keys","map","index","required","undefined","nonEmpty","trim","isTrimmed","AddReviewForm","toggleForm","validate","Standard","First-class","Two-day","Overnight","arrive","Fragment","selector","formValueSelector","ShowHideReview","call","setState","showReview","_this2","components_review_form","NeedLogin","ShowHideNeedLogin","showNeedLogin","components_need_login","ReviewTogglePage","show_hide_review","show_hide_need_login","LandingPage","components_search_page","review_toggle_page","Review","arrived","estimated","Date","estimate_date","arrive_date","getTime","date_created","delivery","order_date","BusPage","match","params","review","src_components_review","reverse","MyReviews","NoBusError","src","alt","LoginForm","aria-live","onSubmitFail","errors","field","Redirect","components_login_form","passwordLength","min","max","matchesPassword","allValues","SignupForm","firstName","lastName","email","content-type","registerUser","components_signup_form","initialState","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","store","createStore","combineReducers","formReducer","action","protectedData","actions","objectSpread","applyMiddleware","thunk","token","getState","Authorization","_ref2","ReactDOM","render","es","BrowserRouter","Router","components_header_bar","Route","exact","path","LoginPage","SignupPage","document","getElementById"],"mappings":"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","file":"static/js/main.04cb7458.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","export const API_BASE_URL =\r\n    process.env.REACT_APP_API_BASE_URL || 'http://www.shipwhen.com/api';\r\n","// Boilerplate code for handling errors from the API.  If the error response\r\n// contains JSON then we return a rejected promise containing the decoded\r\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\r\n// containing the status text.  If there is no error then we continue with\r\n// the promise chain.\r\nexport const normalizeResponseErrors = res => {\r\n    if (!res.ok) {\r\n        if (\r\n            res.headers.has('content-type') &&\r\n            res.headers.get('content-type').startsWith('application/json')\r\n        ) {\r\n            // It's a nice JSON error returned by us, so decode it\r\n            return res.json().then(err => Promise.reject(err));\r\n        }\r\n        // It's a less informative error returned by express\r\n        return Promise.reject({\r\n            code: res.status,\r\n            message: res.statusText\r\n        });\r\n    }\r\n    return res;\r\n};","export const loadAuthToken = () => {\r\n    return localStorage.getItem('authToken');\r\n};\r\n\r\nexport const saveAuthToken = authToken => {\r\n    try {\r\n        localStorage.setItem('authToken', authToken);\r\n    } catch (e) {}\r\n};\r\n\r\nexport const clearAuthToken = () => {\r\n    try {\r\n        localStorage.removeItem('authToken');\r\n    } catch (e) {}\r\n};","import jwtDecode from 'jwt-decode';\r\nimport {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\nimport {saveAuthToken, clearAuthToken} from '../local-storage';\r\n\r\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\r\nexport const setAuthToken = authToken => ({\r\n    type: SET_AUTH_TOKEN,\r\n    authToken\r\n});\r\n\r\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\r\nexport const clearAuth = () => ({\r\n    type: CLEAR_AUTH\r\n});\r\n\r\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\r\nexport const authRequest = () => ({\r\n    type: AUTH_REQUEST\r\n});\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const authSuccess = currentUser => ({\r\n    type: AUTH_SUCCESS,\r\n    currentUser\r\n});\r\n\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const authError = error => ({\r\n    type: AUTH_ERROR,\r\n    error\r\n});\r\n\r\n// Stores the auth token in state and localStorage, and decodes and stores\r\n// the user data stored in the token\r\nconst storeAuthInfo = (authToken, dispatch) => {\r\n    const decodedToken = jwtDecode(authToken);\r\n    dispatch(setAuthToken(authToken));\r\n    dispatch(authSuccess(decodedToken.user));\r\n    saveAuthToken(authToken);\r\n};\r\n\r\nexport const login = (username, password) => dispatch => {\r\n    dispatch(authRequest());\r\n    return (\r\n        fetch(`${API_BASE_URL}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        })\r\n            // Reject any requests which don't return a 200 status, creating\r\n            // errors which follow a consistent format\r\n            .then(res => normalizeResponseErrors(res))\r\n            .then(res => res.json())\r\n            .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n            .catch(err => {\r\n                const {code} = err;\r\n                const message =\r\n                    code === 401\r\n                        ? 'Incorrect username or password'\r\n                        : 'Unable to login, please try again';\r\n                dispatch(authError(err));\r\n                // Could not authenticate, so return a SubmissionError for Redux\r\n                // Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        _error: message\r\n                    })\r\n                );\r\n            })\r\n    );\r\n};\r\n\r\nexport const refreshAuthToken = () => (dispatch, getState) => {\r\n    dispatch(authRequest());\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n            // Provide our existing token as credentials to get a new one\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n        .catch(err => {\r\n            // We couldn't get a refresh token because our current credentials\r\n            // are invalid or expired, or something else went wrong, so clear\r\n            // them and sign us out\r\n            dispatch(authError(err));\r\n            dispatch(clearAuth());\r\n            clearAuthToken(authToken);\r\n        });\r\n};","\r\nimport {API_BASE_URL} from '../config';\r\nimport {SubmissionError} from 'redux-form';\r\nimport {normalizeResponseErrors} from './utils';\r\nimport history from '../components/history';\r\n\r\nconst token = localStorage.getItem('authToken');\r\n\r\n\r\nexport const FETCH_BUS_REQUEST = 'FETCH_BUS_REQUEST';\r\nexport const fetchBusRequest = loading => ({\r\n    type: FETCH_BUS_REQUEST,\r\n    loading: true\r\n});\r\n\r\nexport const FETCH_BUS_SUCCESS = 'FETCH_BUS_SUCCESS';\r\nexport const fetchBusSuccess = (reviews) => ({\r\n    type: FETCH_BUS_SUCCESS,\r\n    loading: false,\r\n    noData: false,\r\n    reviews\r\n});\r\n\r\nexport const FETCH_BUS_ERROR = 'FETCH_BUS_ERROR';\r\nexport const fetchBusError = (error) => ({\r\n    type: FETCH_BUS_ERROR,\r\n    loading: false,\r\n    error: \"Something went wrong\"\r\n});\r\n\r\nexport const FETCH_MYREVIEWS_SUCCESS = 'FETCH_MYREVIEWS_SUCCESS';\r\nexport const fetchMyReviewsSuccess = (reviews) => ({\r\n    type: FETCH_MYREVIEWS_SUCCESS,\r\n    loading: false,\r\n    noData: false,\r\n    reviews\r\n});\r\n\r\n// TRYING TO HANDLE SERVER RESPONSE THAT IS EMPTY\r\nexport const FETCH_BUS_NODATA = 'FETCH_BUS_NODATA';\r\nexport const fetchBusNoData = (bus_name) => ({\r\n    type: FETCH_BUS_NODATA,\r\n    loading: false,\r\n    noData: true,\r\n    bus_name\r\n});\r\n\r\nexport const FETCH_REVIEW_ERROR = 'FETCH_REVIEW_ERROR';\r\nexport const fetchReviewError = () => ({\r\n    type: FETCH_REVIEW_ERROR,\r\n    loading: false\r\n});\r\n\r\nexport const FETCH_REVIEW_SUCCESS = 'FETCH_REVIEW_SUCCESS';\r\nexport const fetchReviewSuccess = () => ({\r\n    type: FETCH_REVIEW_SUCCESS,\r\n    loading: false\r\n});\r\n\r\n\r\n\r\n// ---------------- GET THE BUSINESS'S REVIEWS FROM SERVER -------------- Used in components/landing-page\r\nexport const getBus = (bus_name) => dispatch => {\r\n    dispatch(fetchBusRequest());\r\n    return (\r\n        fetch(`${API_BASE_URL}/reviews/${bus_name}`, {\r\n            method: 'GET',\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(res => {\r\n            if (res.length === 0) {\r\n                console.log(\"No Business shipping-time review(s) found\");\r\n                dispatch(fetchBusNoData(`${bus_name}`))\r\n                history.push(\"/no-business\")\r\n                .then(err => Promise.reject());\r\n            }\r\n            return res\r\n        })\r\n        .then(bus => {\r\n            console.log(\"Found Business shipping-time review(s) successfully\");\r\n            console.log(bus);\r\n            dispatch(fetchBusSuccess(bus))\r\n            history.push(`/reviews/${bus_name}`);\r\n        })\r\n        .catch(err => {\r\n             dispatch(fetchBusError());\r\n        })\r\n    );\r\n};\r\n\r\n// ---------------- POST THE A BUSINESS REVIEW TO SERVER -------------- Used in components/add-review\r\nexport const submitReview = (values, user) => dispatch => {\r\n    values.user = user;\r\n    return (\r\n        fetch(`${API_BASE_URL}/reviews`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                dataType: 'json'\r\n            })\r\n            .then(res => {\r\n                    if (!res.ok) {\r\n                        console.log(\"Could not submit shipping-time review\");\r\n                        dispatch(fetchReviewError());\r\n                        if (\r\n                            res.headers.has('content-type') &&\r\n                            res.headers\r\n                                .get('content-type')\r\n                                .startsWith('application/json')\r\n                        ) {\r\n                            // It's a nice JSON error returned by us, so decode it\r\n                            return res.json().then(err => Promise.reject(err));\r\n                        }\r\n                        // It's a less informative error returned by express\r\n                        return Promise.reject({\r\n                            code: res.status,\r\n                            message: res.statusText\r\n                        });\r\n                    }\r\n                    return;\r\n                })\r\n                .then(res => {\r\n                    console.log(\"Submitted shipping-time review successfully\");\r\n                    dispatch(fetchReviewSuccess());\r\n                    dispatch(getBus(`${values.bus_name}`));\r\n                })\r\n                .catch(err => {\r\n                    const {reason, message, location} = err;\r\n                    if (reason === 'ValidationError') {\r\n                        // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n                        return Promise.reject(\r\n                            new SubmissionError({\r\n                                [location]: message\r\n                            })\r\n                        );\r\n                    }\r\n                    return Promise.reject(\r\n                        new SubmissionError({\r\n                            _error: 'Error submitting message'\r\n                        })\r\n                    );\r\n                })\r\n    );\r\n};\r\n\r\n// ---------------- GET USER REVIEWS FROM SERVER --------------\r\nexport const fetchReviews = (username) => dispatch => {\r\n    return (\r\n        fetch(`${API_BASE_URL}/myreviews/${username}`, {\r\n            method: 'GET',\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        .then(res => {\r\n            if (res.length === 0) {\r\n                console.log(\"No Business shipping-time review(s) found\");\r\n                dispatch(fetchBusNoData(`${username}`))\r\n                history.push(\"/no-business\")\r\n                .then(err => Promise.reject());\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(bus => {\r\n            console.log(\"Found Business shipping-time review(s) successfully\");\r\n            console.log(bus);\r\n            dispatch(fetchMyReviewsSuccess(bus));\r\n            history.push(`/myreviews/${username}`)\r\n        })\r\n        .catch(err => {\r\n             dispatch(fetchBusError());\r\n        })\r\n    );\r\n};","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {clearAuth} from '../actions/auth';\r\nimport {clearAuthToken} from '../local-storage';\r\nimport {fetchReviews} from '../actions/bus-reviews';\r\n\r\nimport './header-bar.css';\r\n\r\nexport class HeaderBar extends React.Component {\r\n    getReviews(username) {\r\n        console.log(\"retrieving reviews\");\r\n        return this.props.dispatch(fetchReviews(username));\r\n    }\r\n\r\n    logOut() {\r\n        this.props.dispatch(clearAuth());\r\n        clearAuthToken();\r\n    }\r\n\r\n    render() {\r\n\r\n        let userIcon;\r\n\r\n        if (this.props.loggedIn) {\r\n            const username = this.props.created_by.username;\r\n            userIcon = \r\n              <div>\r\n                <button className=\"bthree\" onClick={() => this.getReviews(username)}>Reviews</button>\r\n                <button className=\"btwo\" onClick={() => this.logOut()}>Log out</button>\r\n              </div>\r\n        }\r\n      \r\n        let loginSignup;\r\n        if (this.props.loggedIn === false) {\r\n            loginSignup =\r\n                <div>\r\n                    <button className=\"bone\">\r\n                        <Link to=\"/login-page\">Log In</Link>\r\n                    </button>\r\n                    <button className=\"btwo\">\r\n                        <Link to=\"/signup-page\">Sign Up</Link>\r\n                    </button>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n                <div className=\"header-bar\">\r\n                    <h1>\r\n                        <Link to=\"/\">shipwhen?</Link>\r\n                    </h1>\r\n                    <div className=\"headerButtons\">\r\n                        {loginSignup}\r\n                        {userIcon}\r\n                    </div>\r\n                </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedIn: state.auth.currentUser !== null,\r\n        created_by: state.auth.currentUser\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(HeaderBar);","import React from 'react';\r\n\r\n// THIS PAGE IS USED IN REVIEW-FORM.JS\r\nexport default class Input extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.meta.active && this.props.meta.active) {\r\n            this.input.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.meta.touched && this.props.meta.error) {\r\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\r\n        }\r\n\r\n        let warning;\r\n        if (this.props.meta.touched && this.props.meta.warning) {\r\n            warning = (\r\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"form-input\">\r\n                <label htmlFor={this.props.input.name}>\r\n                    {this.props.label}\r\n                    {error}\r\n                    {warning}\r\n                </label>\r\n                <input\r\n                    {...this.props.input}\r\n                    id={this.props.input.name}\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    ref={input => (this.input = input)}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, FieldArray, reduxForm} from 'redux-form';\r\nimport Input from './input';\r\nimport history from './history';\r\nimport './search-form.css';\r\n\r\n// --------- THIS FORM IS FOR THE USER TO ENTER A BUS NAME TO THEN RETRIVE IT'S REVIEWS --------\r\nclass SearchForm extends React.Component {\r\n\r\n  onSubmit(values) {\r\n    const name = values.busName;\r\n    console.log(\"Searching for shipping-time reviews on Business: \" + name);\r\n    history.push(`/reviews/${name}`);\r\n  }\r\n\r\n  render() {\r\n    function titleCase(str) {\r\n           var splitStr = str.toLowerCase().split(' ');\r\n           for (var i = 0; i < splitStr.length; i++) {\r\n               // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n               // Assign it back to the array\r\n               splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \r\n           }\r\n           // Directly return the joined string\r\n           return splitStr.join(' '); \r\n        }\r\n\r\n    return (\r\n      <div className=\"searchForm\">\r\n        <form onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\r\n          <label htmlFor=\"busName\"></label>\r\n          <Field component={Input} type=\"text\" name=\"busName\" id=\"busName\" placeholder=\"Search Business Name\" normalize={titleCase}/>\r\n          <button type=\"submit\" disabled={ this.props.pristine || this.props.submitting} >Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    noData: state.busReviews.noData,\r\n    error: state.busReviews.error\r\n  };\r\n}\r\n\r\nSearchForm = connect(\r\n  mapStateToProps\r\n)(SearchForm);\r\n\r\n\r\nexport default reduxForm({\r\n  form: 'search' \r\n})(SearchForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SearchForm from './search-form';\r\n\r\nimport \"./search-page.css\"\r\n\r\n// ------------------ THIS IS THE SEARCH PAGE TO HOST THE SEARCH FORM ------------------ Used in components/Landing Page\r\nexport class SearchPage extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t        <div id=\"searchPage\">\r\n\t            <SearchForm />  \r\n\t        </div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.busReviews.reviews\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchPage);","import React from 'react';\r\n\r\n// THIS PAGE IS USED IN REVIEW-FORM.JS\r\nexport const Select = props => {\r\n  const renderSelectOptions = (key, index) => {\r\n    return (\r\n      <option\r\n        key={`${index}-${key}`}\r\n        value={key}\r\n      >\r\n        {props.options[key]}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  if (props && props.options) {\r\n    return (\r\n      <div className=\"mv3 w-100\">\r\n        <div className=\"b sans-serif pv2 w-100\">{props.label}</div>\r\n        <select {...props.input} className=\"pa2 input-reset ba b--black-40 w-100\">\r\n          <option value=\"\">Select</option>\r\n          {Object.keys(props.options).map(renderSelectOptions)}\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n  return <div></div>\r\n}\r\n\r\nexport default Select;","export const required = value => (value ? undefined : 'Required');\r\nexport const nonEmpty = value =>\r\n    value.trim() !== '' ? undefined : 'Cannot be empty';\r\nexport const isTrimmed = value =>\r\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\r\nexport const length = length => value => {\r\n    if (length.min && value.length < length.min) {\r\n        return `Must be at least ${length.min} characters long`;\r\n    }\r\n    if (length.max && value.length > length.max) {\r\n        return `Must be at most ${length.max} characters long`;\r\n    }\r\n};\r\nexport const matches = field => (value, allValues) =>\r\n    field in allValues && value.trim() === allValues[field].trim()\r\n        ? undefined\r\n        : 'Does not match';\r\nexport const email = value =>\r\n    /^\\S+@\\S+$/.test(value) ? undefined : 'Must be a valid email address';","import React from 'react';\r\nimport {reduxForm, Field, SubmissionError, focus, formValueSelector} from 'redux-form';\r\nimport Input from './input';\r\nimport Select from './select';\r\nimport {required, nonEmpty} from '../validators';\r\nimport {submitReview} from '../actions/bus-reviews';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './review-form.css';\r\n\r\n\r\n// ---------------- THIS FORM IS FOR USERS TO ADD A BUSINESS SHIPPING REVIEW -------------- Used in components/bus-page\r\nclass AddReviewForm extends React.Component {\r\n    onSubmit(values, user) {\r\n        console.log(\"submitting review form\");\r\n        this.props.toggleForm();\r\n        return this.props.dispatch(submitReview(values, user));\r\n    }\r\n\r\n    render() {\r\n\r\n        const user = this.props.created_by.username;\r\n        function titleCase(str) {\r\n           var splitStr = str.toLowerCase().split(' ');\r\n           for (var i = 0; i < splitStr.length; i++) {\r\n               // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n               // Assign it back to the array\r\n               splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \r\n           }\r\n           // Directly return the joined string\r\n           return splitStr.join(' '); \r\n        }\r\n        \r\n        return (\r\n            <div>\r\n\r\n                <form id=\"reviewForm\" className=\"review-form\" onSubmit={this.props.handleSubmit(values => this.onSubmit(values, user))}>\r\n\r\n                    <label htmlFor=\"bus_name\">Business Name</label>\r\n                    <Field component={Input} type=\"text\" name=\"bus_name\" placeholder=\"Exact Business Name\" validate={[required, nonEmpty]} normalize={titleCase} />\r\n                    \r\n                    <label htmlFor=\"delivery\">Delivery Type</label>\r\n                    <Field component={Select} type=\"select\" name=\"delivery\" validate={[required, nonEmpty]}\r\n                        options={{\r\n                            Standard: \"Standard\",\r\n                            \"First-class\": \"First Class\",\r\n                            \"Two-day\": \"Two Day\",\r\n                            Overnight: \"Overnight\"\r\n                        }}\r\n                    />\r\n                    \r\n                    <label htmlFor=\"order_date\">Ordered On</label>\r\n                    <Field component={Input} type=\"Date\" name=\"order_date\" validate={[required, nonEmpty]} />\r\n                    \r\n                    <label htmlFor=\"estimate_date\">Estimated to Arrive</label>\r\n                    <Field component={Input} type=\"Date\" name=\"estimate_date\" validate={[required, nonEmpty]} />\r\n                                 \r\n                    <label htmlFor=\"arrive\">Package Arrived</label>\r\n                    <Field component={Input} type=\"checkbox\" name=\"arrive\" />\r\n\r\n                    { this.props.arrive && (\r\n                        <>\r\n                            <label id=\"arrive-date-label\" htmlFor=\"arrive_date\">Arrival Date</label>\r\n                            <Field component={Input} type=\"Date\" name=\"arrive_date\" />\r\n                        </>\r\n                    ) }     \r\n\r\n                    <button type=\"submit\" disabled={this.props.pristine || this.props.submitting}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nAddReviewForm = reduxForm({\r\n  form: 'reviewForm'\r\n})(AddReviewForm);\r\n\r\nconst selector = formValueSelector('reviewForm');\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    created_by: state.auth.currentUser,\r\n    arrive: selector(state, 'arrive')\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(AddReviewForm);\r\n","import React from 'react';\r\nimport AddReviewForm from './review-form';\r\nimport './show-hide.css';\r\n\r\nclass ShowHideReview extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showReview: false\r\n    };\r\n  };\r\n\r\n  toggleForm = () => {\r\n    this.setState({showReview: !this.state.showReview});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"showHideBody\">\r\n        <div className=\"addButton\" onClick={() => this.setState({showReview: !this.state.showReview})}>\r\n          <i className=\"fas fa-plus\"></i>\r\n        </div>\r\n        { this.state.showReview ? <AddReviewForm toggleForm={this.toggleForm} /> : null }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ShowHideReview;","import React from 'react';\r\nimport './need-login.css';\r\n\r\nclass NeedLogin extends React.Component {\r\n\r\n\trender() {\r\n    \treturn (\r\n    \t\t<div className=\"needLogin\">\r\n\t\t\t\t<h3>Must Login to Submit a Review</h3>\r\n      \t\t</div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nexport default NeedLogin;","import React from 'react';\r\nimport NeedLogin from './need-login';\r\nimport './show-hide.css';\r\n\r\nclass ShowHideNeedLogin extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showNeedLogin: false\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"showHideBody\">\r\n        <div className=\"addButton\" onClick={() => this.setState({showNeedLogin: !this.state.showNeedLogin})}>\r\n          <i className=\"fas fa-plus\"></i>\r\n        </div>\r\n        { this.state.showNeedLogin ? <NeedLogin /> : null }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ShowHideNeedLogin;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ShowHideReview from './show-hide-review';\r\nimport ShowHideNeedLogin from './show-hide-need-login';\r\n// import './review-toggle-page.css';\r\n\r\nclass ReviewTogglePage extends React.Component {\r\n\r\n\trender() {\r\n    \treturn (\r\n\t        <div className=\"review-toggle-page\">\r\n\t            { this.props.created_by ? < ShowHideReview /> : <ShowHideNeedLogin /> }  \r\n\t        </div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    created_by: state.auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(ReviewTogglePage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './landing-page.css';\r\nimport SearchPage from './search-page';\r\nimport ReviewTogglePage from './review-toggle-page';\r\n\r\n// ------------------ THIS IS THE LANDING PAGE USERS FIRST SEE ------------------ Used in components/App\r\nexport class LandingPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing-page\">               \r\n        <div id=\"landing-header\">\r\n          <h1>Actual Shipping Times Revealed</h1>\r\n          <h2>How long will your package really take to arrive?</h2>\r\n        </div>\r\n            \r\n        <section id=\"search-page\">\r\n          <SearchPage />   \r\n        </section>\r\n            \r\n        <section id=\"landing-description\">\r\n          <p>\r\n            <div className=\"landingIcons\"><i className=\"fa fa-truck\"></i></div>\r\n            <b>shipwhen?</b> is the largest shipping times directory to look up <b>estimated vs. actual</b> business shipping times, built by people like YOU, the users. We have the largest, most extensive business search available for finding shipping information. Shipwhen is a free directory of information on when items were ordered, estimated to arrive, and actually arrvied.\r\n            <br/><br/>\r\n\r\n            <div className=\"landingIcons\"><i className=\"far fa-clock\"></i></div>\r\n            <b>Find out average business shipping times.</b> Many companies often send misleading estimated shipping times. Lookup the Business Name to see what others have experienced.\r\n            <br/><br/>\r\n\r\n            <div className=\"landingIcons\"><i className=\"fa fa-thumbs-up\"></i></div>\r\n            <b>Leave positive OR negative reviews.</b> Make it known if a company exaggerated their shipping pace or if your item arrived on time. Leaving a review is the best way to make shipping times public and help others avoid having that special item arrive late!\r\n          </p>\r\n        </section>\r\n        <section id=\"review-page\">\r\n            < ReviewTogglePage />     \r\n        </section>\r\n            \r\n        <footer>\r\n          <p>Copyright © 2019 shipwhen? | All Rights Reserved</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.busReviews.reviews\r\n});\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","import React from 'react';\r\n\r\nimport './review.css';\r\n\r\nclass Review extends React.Component {\r\n    \r\n\trender() {\r\n\t    const estimated = new Date(this.props.estimate_date);\r\n\t    let arrived;\r\n\t    let status;\r\n\t    if(this.props.arrive_date) {\r\n\t      arrived = new Date(this.props.arrive_date);\r\n\t            \r\n\t            if (arrived.getTime() === estimated.getTime()) {\r\n\t                status = <span id=\"blue\">On Time</span>;\r\n\t            }\r\n\t            else if (arrived > estimated) {\r\n\t                status = <span id=\"orange\">Late</span>;\r\n\t            }\r\n\t            else status = <span id=\"green\">Early</span>;\r\n\t    }\r\n\t    else {\r\n\t    \tstatus = <span id=\"red\">N/A</span>;\r\n\t    }\r\n\r\n    \treturn (\r\n\t\t\t<div className=\"reviewPage\">\r\n\t\t\t\t<div className=\"indivReview\">\r\n\t\t\t\t\t<div className=\"revDetails\">\r\n\t\t\t\t\t\t<p className=\"one\">{this.props.created_by}</p>\r\n\t\t\t\t\t\t<p className=\"two\">{this.props.date_created}</p>\r\n\t\t\t\t\t\t<p className=\"three status\">{status}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"hr\"><hr /></div>\r\n\t\t\t\t\t<p>Business: {this.props.bus_name}</p>\r\n\t\t\t\t\t<p>Delivery Type: {this.props.delivery}</p>\r\n\t\t\t\t\t<p>Ordered On: {this.props.order_date}</p>\r\n\t\t\t\t\t<p><b>Estimated</b> to Arrive: {this.props.estimate_date}</p>\r\n\t\t\t\t\t<p>Package Arrived: {this.props.arrive ? \"Arrived\" : \"Didn't Arrive\"}</p>\r\n\t\t\t\t\t<p><b>Arrived:</b> {this.props.arrive_date ? this.props.arrive_date : \"N/A\"}</p>\r\n\t\t\t\t</div> \r\n\t\t\t</div>\r\n    \t);\r\n    };\r\n};\r\n\r\nexport default Review;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Review from './review';\r\nimport ReviewTogglePage from './review-toggle-page';\r\nimport {getBus} from '../actions/bus-reviews';\r\n\r\nimport './bus-page.css';\r\n\r\nclass BusPage extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst bus = this.props.match.params.bus_name;\r\n\t\tthis.props.dispatch(getBus(bus));\r\n\t}\r\n\r\n\trender() {\r\n\t    const reviews = this.props.reviews.map((review, index) => (\r\n\t        <li className=\"review-wrapper\" key={index}>\r\n\t            <Review index={index} {...review} />\r\n\t        </li>\r\n\t    ));\r\n\r\n\t    return (\r\n\t        <div className=\"busPage\">\r\n\t            <h1>Reviews for {this.props.match.params.bus_name}</h1>\r\n\t            <ul className=\"reviews1\">\r\n\t                {reviews.reverse(this.props.date_created)}\r\n\t            </ul>\r\n\t            <section id=\"review-page\">\r\n\t                < ReviewTogglePage />\t\t\t\r\n\t\t\t\t</section>\r\n\t        </div>\r\n\t    );\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    reviews: state.busReviews.reviews,\r\n    created_by: state.auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(BusPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Review from './review';\r\nimport ReviewTogglePage from './review-toggle-page';\r\n\r\nimport './my-reviews.css';\r\n\r\nclass MyReviews extends React.Component {\r\n\r\n\t// componentDidMount() {\r\n\t// \tconst bus = this.props.match.params.bus_name;\r\n\t// \tthis.props.dispatch(getBus(bus));\r\n\t// }\r\n\r\n\trender() {\r\n\t    const reviews = this.props.reviews.map((review, index) => (\r\n\t        <li className=\"review-wrapper\" key={index}>\r\n\t            <Review index={index} {...review} />\r\n\t        </li>\r\n\t    ));\r\n\r\n\t    return (\r\n\t        <div className=\"myReviewsPage\">\r\n\t            <h1>{this.props.match.params.username}'s Reviews</h1>\r\n\t            <ul className=\"reviews\">\r\n\t                {reviews.reverse(this.props.date_created)}\r\n\t            </ul>\r\n\t            <section id=\"review-page\">\r\n\t                < ReviewTogglePage />\t\t\t\r\n\t\t\t\t</section>\r\n\t        </div>\r\n\t    );\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    reviews: state.busReviews.reviews,\r\n    created_by: state.auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(MyReviews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReviewTogglePage from './review-toggle-page';\r\nimport './no-bus-error.css';\r\n\r\nclass NoBusError extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"noBus-content\">\r\n\t\t\t\t<div className=\"noBus-text\">\r\n\t\t\t\t\t<h1>{this.props.busName}</h1>\r\n\t\t        \t<img src=\"no-data\" alt=\"\" />\r\n\t\t        \t<h2>No shipping-time reviews found</h2>\r\n\t\t        \t<p>Click the \"plus\" icon below to submit a review and help out your community</p>\r\n\t        \t</div>\r\n\t        \t<section id=\"review-page\">\r\n\t\t\t\t\t< ReviewTogglePage />\r\n\t\t\t\t</section>\r\n      \t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tbusName: state.busReviews.bus_name\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(NoBusError);\r\n","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport Input from './input';\r\nimport {login} from '../actions/auth';\r\nimport {required, nonEmpty} from '../validators';\r\nimport './login-form.css';\r\n\r\n\r\n// ---------------- THIS IS THE FORM FOR USERS TO LOGIN --------------\r\n\r\nexport class LoginForm extends React.Component {\r\n    onSubmit(values) {\r\n        return this.props.dispatch(login(values.username, values.password));\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.error) {\r\n            error = (\r\n                <div className=\"form-error\" aria-live=\"polite\">\r\n                    {this.props.error}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"login\">\r\n                <form className=\"login-form\" onSubmit={this.props.handleSubmit(values =>\r\n                    this.onSubmit(values))}>\r\n                    {error}\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <br/>\r\n                    <Field component={Input} type=\"text\" name=\"username\" id=\"username\" placeholder=\"demo\" validate={[required, nonEmpty]} />\r\n                    \r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <br/>\r\n                    <Field component={Input} type=\"password\" name=\"password\" id=\"password\" placeholder=\"DemoUser\"validate={[required, nonEmpty]} />\r\n                    <button disabled={this.props.pristine || this.props.submitting}> Log In </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'login',\r\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\r\n})(LoginForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport LoginForm from './login-form';\r\nimport './login-page.css';\r\n\r\nexport function LoginPage(props) {\r\n\t\r\n\tif (props.loggedIn) {\r\n   \t\treturn <Redirect to=\"/\" />;\r\n    }\r\n    \r\n\treturn (\r\n\t    <div className=\"login-page\">\r\n\t        <h1>Welcome</h1>\r\n\t        <p><b> leaving a shipping-time review helps users like you</b></p>\r\n\t        <LoginForm /> \r\n\t    </div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(LoginPage);","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport {registerUser} from '../actions/users';\r\nimport {login} from '../actions/auth';\r\nimport Input from './input';\r\nimport {required, nonEmpty, matches, length, isTrimmed} from '../validators';\r\nimport './signup-form.css';\r\n\r\nconst passwordLength = length({min: 7, max: 72});\r\nconst matchesPassword = matches('password');\r\n\r\nexport class SignupForm extends React.Component {\r\n    onSubmit(values) {\r\n        const {username, password, firstName, lastName, email} = values;\r\n        const user = {username, password, firstName, lastName, email};\r\n        return this.props\r\n            .dispatch(registerUser(user))\r\n            .then(() => this.props.dispatch(login(username, password)));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"signup\">\r\n                <form\r\n                    className=\"signup-form\"\r\n                    onSubmit={this.props.handleSubmit(values =>\r\n                        this.onSubmit(values)\r\n                    )}>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <Field component={Input} type=\"text\" placeholder=\"first\" name=\"firstName\" />\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <Field component={Input} type=\"text\" placeholder=\"last\" name=\"lastName\" />\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        validate={[required, nonEmpty, isTrimmed]}\r\n                    />\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <Field component={Input} type=\"email\" placeholder=\"email@email.com\" name=\"email\" validate={[required]} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        validate={[required, passwordLength, isTrimmed]}\r\n                    />\r\n                    <label htmlFor=\"passwordConfirm\">Confirm Password</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"password\"\r\n                        name=\"passwordConfirm\"\r\n                        placeholder=\"re-type password\"\r\n                        validate={[required, nonEmpty, matchesPassword]}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={this.props.pristine || this.props.submitting}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'registration',\r\n    onSubmitFail: (errors, dispatch) =>\r\n        dispatch(focus('registration', Object.keys(errors)[0]))\r\n})(SignupForm);\r\n","import {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const registerUser = user => dispatch => {\r\n    return fetch(`${API_BASE_URL}/users`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            const {reason, message, location} = err;\r\n            if (reason === 'ValidationError') {\r\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        [location]: message\r\n                    })\r\n                );\r\n            }\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport SignupForm from './signup-form';\r\nimport './signup-page.css';\r\n\r\nexport function SignUpPage(props) {\r\n\tif (props.loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n\treturn (\r\n\t  <div className=\"signup-page\">\r\n      <div className=\"colContainer\">\r\n        <div className=\"col-6 one\">\r\n          <h1>Find Actual Business Shipping Times</h1>\r\n          <img alt=\"shipping truck\" src=\"https://cdn2.iconfinder.com/data/icons/blue-transports-3/262/Untitled-2-512.png\" />\r\n        </div>\r\n        <div className=\"col-6\" id=\"colTwo\">\r\n          <h2>sign up to post helpful reviews</h2>\r\n          <SignupForm /> \r\n        </div>\r\n      </div>\r\n    </div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignUpPage);","import {\r\n    SET_AUTH_TOKEN,\r\n    CLEAR_AUTH,\r\n    AUTH_REQUEST,\r\n    AUTH_SUCCESS,\r\n    AUTH_ERROR\r\n} from '../actions/auth';\r\n\r\nconst initialState = {\r\n    authToken: null, // authToken !== null does not mean it has been validated\r\n    currentUser: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === SET_AUTH_TOKEN) {\r\n        return Object.assign({}, state, {\r\n            authToken: action.authToken\r\n        });\r\n    } else if (action.type === CLEAR_AUTH) {\r\n        return Object.assign({}, state, {\r\n            authToken: null,\r\n            currentUser: null\r\n        });\r\n    } else if (action.type === AUTH_REQUEST) {\r\n        return Object.assign({}, state, {\r\n            loading: true,\r\n            error: null\r\n        });\r\n    } else if (action.type === AUTH_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            currentUser: action.currentUser\r\n        });\r\n    } else if (action.type === AUTH_ERROR) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}","import {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\r\nexport const fetchProtectedDataSuccess = data => ({\r\n    type: FETCH_PROTECTED_DATA_SUCCESS,\r\n    data\r\n});\r\n\r\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\r\nexport const fetchProtectedDataError = error => ({\r\n    type: FETCH_PROTECTED_DATA_ERROR,\r\n    error\r\n});\r\n\r\nexport const fetchProtectedData = () => (dispatch, getState) => {\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/protected`, {\r\n        method: 'GET',\r\n        headers: {\r\n            // Provide our auth token as credentials\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then(({data}) => dispatch(fetchProtectedDataSuccess(data)))\r\n        .catch(err => {\r\n            dispatch(fetchProtectedDataError(err));\r\n        });\r\n};","import {\r\n    FETCH_PROTECTED_DATA_SUCCESS,\r\n    FETCH_PROTECTED_DATA_ERROR\r\n} from '../actions/protected-data';\r\n\r\nconst initialState = {\r\n    data: '',\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            data: action.data,\r\n            error: null\r\n        });\r\n    } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\r\n        return Object.assign({}, state, {\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}","\r\nimport * as actions from '../actions/bus-reviews';\r\n\r\nconst initialState = {\r\n    bus_name: null,\r\n    reviews: [],\r\n    error: null,\r\n    noData: null,\r\n    loading: null\r\n};\r\n\r\nexport default function busReviewsReducer(state=initialState, action) {\r\n    if (action.type === actions.FETCH_BUS_REQUEST) {\r\n        return { ...state,\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n    if (action.type === actions.FETCH_BUS_ERROR) {\r\n        return Object.assign({}, state, {\r\n            reviews: [null],\r\n            loading: action.loading,\r\n            error: action.error\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_REVIEW_ERROR) {\r\n        return Object.assign({}, state, {\r\n            loading: action.loading\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_BUS_NODATA) {\r\n        return Object.assign({}, state, {\r\n            bus_name: action.bus_name,\r\n            loading: action.loading,\r\n            noData: action.noData\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_REVIEW_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            loading: action.loading\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_BUS_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            reviews: action.reviews,\r\n            loading: action.loading,\r\n            noData: action.noData\r\n        })\r\n    }\r\n    else if (action.type === actions.FETCH_MYREVIEWS_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            reviews: action.reviews,\r\n            loading: action.loading,\r\n            noData: action.noData\r\n        })\r\n    }\r\n    return state;\r\n};","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport {loadAuthToken} from './local-storage';\r\nimport authReducer from './reducers/auth';\r\nimport protectedDataReducer from './reducers/protected-data';\r\nimport {setAuthToken, refreshAuthToken} from './actions/auth';\r\nimport busReviewsReducer from './reducers/bus-reviews';\r\n\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        form: formReducer,\r\n        auth: authReducer,\r\n        protectedData: protectedDataReducer,\r\n        busReviews: busReviewsReducer\r\n    }),\r\n    applyMiddleware(thunk)\r\n);\r\n\r\n// Hydrate the authToken from localStorage if it exist\r\nconst authToken = loadAuthToken();\r\nif (authToken) {\r\n    const token = authToken;\r\n    store.dispatch(setAuthToken(token));\r\n    store.dispatch(refreshAuthToken());\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/app';\nimport store from './store';\nimport './index.css';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport history from './history';\r\nimport HeaderBar from './header-bar';\r\nimport LandingPage from './landing-page';\r\nimport BusPage from './bus-page';\r\nimport MyReviews from './MyReviews';\r\nimport NoBusError from './no-bus-error';\r\nimport LoginPage from './login-page';\r\nimport SignupPage from './signup-page';\r\n\r\nimport './app.css';\r\n\r\n// ---------------------- THIS IS MY ROOT COMPONENT ----------------------- Used in index.js\r\nexport default function App(props) {\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <div className=\"app\">\r\n                <header>\r\n                    <HeaderBar />\r\n                </header>\r\n\r\n                <main>\r\n                    <Route exact path=\"/\" component={LandingPage} />\r\n                    <Route exact path=\"/myreviews/:username\" component={MyReviews} />\r\n                    <Route exact path=\"/reviews/:bus_name\" component={BusPage} />\r\n                    <Route exact path=\"/no-business\" component={NoBusError} />                        \r\n                    <Route exact path=\"/login-page\" component={LoginPage} />\r\n                    <Route exact path=\"/signup-page\" component={SignupPage} />\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n"],"sourceRoot":""}