{"version":3,"sources":["components/history.js","config.js","actions/utils.js","local-storage.js","actions/auth.js","components/header-bar.js","components/input.js","components/search-form.js","components/search-page.js","components/landing-page.js","components/review.js","components/select.js","validators.js","actions/bus-reviews.js","components/review-form.js","components/show-hide-review.js","components/need-login.js","components/show-hide-need-login.js","components/review-toggle-page.js","components/bus-page.js","components/no-bus-error.js","components/login-form.js","components/login-page.js","components/signup-form.js","actions/users.js","components/signup-page.js","reducers/auth.js","actions/protected-data.js","reducers/protected-data.js","reducers/bus-reviews.js","store.js","index.js","components/app.js"],"names":["createBrowserHistory","API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","HeaderBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","userIcon","loginSignup","_this","loggedIn","react_default","a","createElement","className","onClick","logOut","Link","to","React","Component","connect","state","auth","Input","prevProps","meta","active","input","focus","warning","touched","htmlFor","name","label","assign","id","placeholder","ref","SearchForm","values","busName","console","log","history","push","onSubmit","handleSubmit","Field","component","disabled","pristine","submitting","noData","busReviews","reduxForm","form","SearchPage","components_search_form","data","reviews","LandingPage","components_search_page","Review","arrived","estimated","Date","estimate_date","arrive_date","getTime","created_by","date_created","bus_name","delivery","order_date","arrive","Select","options","keys","map","index","required","undefined","nonEmpty","trim","isTrimmed","FETCH_BUS_REQUEST","getItem","FETCH_BUS_SUCCESS","FETCH_BUS_ERROR","FETCH_BUS_NODATA","FETCH_REVIEW_ERROR","FETCH_REVIEW_SUCCESS","getBus","loading","contentType","dataType","length","fetchBusNoData","bus","submitReview","submitSucceeded","reason","location","defineProperty","AddReviewForm","toggleForm","errorMessage","successMessage","validate","Standard","First-class","Two-day","Overnight","Fragment","selector","formValueSelector","ShowHideReview","call","setState","showReview","_this2","components_review_form","NeedLogin","ShowHideNeedLogin","showNeedLogin","components_need_login","ReviewTogglePage","show_hide_review","show_hide_need_login","BusPage","match","params","review","src_components_review","review_toggle_page","NoBusError","src","alt","LoginForm","aria-live","onSubmitFail","errors","field","Redirect","components_login_form","passwordLength","min","max","matchesPassword","allValues","SignupForm","firstName","lastName","email","content-type","registerUser","components_signup_form","initialState","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","store","createStore","combineReducers","formReducer","action","protectedData","actions","objectSpread","applyMiddleware","thunk","token","getState","Authorization","_ref2","ReactDOM","render","es","BrowserRouter","Router","components_header_bar","Route","exact","path","LoginPage","SignupPage","document","getElementById"],"mappings":"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","file":"static/js/main.307bf511.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","export const API_BASE_URL =\r\n    process.env.REACT_APP_API_BASE_URL || 'http://www.shipwhen.com/api';\r\n","// Boilerplate code for handling errors from the API.  If the error response\r\n// contains JSON then we return a rejected promise containing the decoded\r\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\r\n// containing the status text.  If there is no error then we continue with\r\n// the promise chain.\r\nexport const normalizeResponseErrors = res => {\r\n    if (!res.ok) {\r\n        if (\r\n            res.headers.has('content-type') &&\r\n            res.headers.get('content-type').startsWith('application/json')\r\n        ) {\r\n            // It's a nice JSON error returned by us, so decode it\r\n            return res.json().then(err => Promise.reject(err));\r\n        }\r\n        // It's a less informative error returned by express\r\n        return Promise.reject({\r\n            code: res.status,\r\n            message: res.statusText\r\n        });\r\n    }\r\n    return res;\r\n};","export const loadAuthToken = () => {\r\n    return localStorage.getItem('authToken');\r\n};\r\n\r\nexport const saveAuthToken = authToken => {\r\n    try {\r\n        localStorage.setItem('authToken', authToken);\r\n    } catch (e) {}\r\n};\r\n\r\nexport const clearAuthToken = () => {\r\n    try {\r\n        localStorage.removeItem('authToken');\r\n    } catch (e) {}\r\n};","import jwtDecode from 'jwt-decode';\r\nimport {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\nimport {saveAuthToken, clearAuthToken} from '../local-storage';\r\n\r\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\r\nexport const setAuthToken = authToken => ({\r\n    type: SET_AUTH_TOKEN,\r\n    authToken\r\n});\r\n\r\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\r\nexport const clearAuth = () => ({\r\n    type: CLEAR_AUTH\r\n});\r\n\r\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\r\nexport const authRequest = () => ({\r\n    type: AUTH_REQUEST\r\n});\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const authSuccess = currentUser => ({\r\n    type: AUTH_SUCCESS,\r\n    currentUser\r\n});\r\n\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const authError = error => ({\r\n    type: AUTH_ERROR,\r\n    error\r\n});\r\n\r\n// Stores the auth token in state and localStorage, and decodes and stores\r\n// the user data stored in the token\r\nconst storeAuthInfo = (authToken, dispatch) => {\r\n    const decodedToken = jwtDecode(authToken);\r\n    dispatch(setAuthToken(authToken));\r\n    dispatch(authSuccess(decodedToken.user));\r\n    saveAuthToken(authToken);\r\n};\r\n\r\nexport const login = (username, password) => dispatch => {\r\n    dispatch(authRequest());\r\n    return (\r\n        fetch(`${API_BASE_URL}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        })\r\n            // Reject any requests which don't return a 200 status, creating\r\n            // errors which follow a consistent format\r\n            .then(res => normalizeResponseErrors(res))\r\n            .then(res => res.json())\r\n            .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n            .catch(err => {\r\n                const {code} = err;\r\n                const message =\r\n                    code === 401\r\n                        ? 'Incorrect username or password'\r\n                        : 'Unable to login, please try again';\r\n                dispatch(authError(err));\r\n                // Could not authenticate, so return a SubmissionError for Redux\r\n                // Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        _error: message\r\n                    })\r\n                );\r\n            })\r\n    );\r\n};\r\n\r\nexport const refreshAuthToken = () => (dispatch, getState) => {\r\n    dispatch(authRequest());\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n            // Provide our existing token as credentials to get a new one\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n        .catch(err => {\r\n            // We couldn't get a refresh token because our current credentials\r\n            // are invalid or expired, or something else went wrong, so clear\r\n            // them and sign us out\r\n            dispatch(authError(err));\r\n            dispatch(clearAuth());\r\n            clearAuthToken(authToken);\r\n        });\r\n};","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {clearAuth} from '../actions/auth';\r\nimport {clearAuthToken} from '../local-storage';\r\n\r\nimport './header-bar.css';\r\n\r\nexport class HeaderBar extends React.Component {\r\n    logOut() {\r\n        this.props.dispatch(clearAuth());\r\n        clearAuthToken();\r\n    }\r\n\r\n    render() {\r\n        let userIcon;\r\n        if (this.props.loggedIn) {\r\n            userIcon = \r\n              <div>\r\n                <button className=\"btwo\" onClick={() => this.logOut()}>Log out</button>\r\n              </div>\r\n        }\r\n      \r\n        let loginSignup;\r\n        if (this.props.loggedIn === false) {\r\n            loginSignup =\r\n                <div>\r\n                    <button className=\"bone\">\r\n                        <Link to=\"/login-page\">Log In</Link>\r\n                    </button>\r\n                    <button className=\"btwo\">\r\n                        <Link to=\"/signup-page\">Sign Up</Link>\r\n                    </button>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n                <div className=\"header-bar\">\r\n                    <h1>\r\n                        <Link to=\"/\">shipwhen?</Link>\r\n                    </h1>\r\n                    <div className=\"headerButtons\">\r\n                        {loginSignup}\r\n                        {userIcon}\r\n                    </div>\r\n                </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(HeaderBar);","import React from 'react';\r\n\r\n// THIS PAGE IS USED IN REVIEW-FORM.JS\r\nexport default class Input extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.meta.active && this.props.meta.active) {\r\n            this.input.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.meta.touched && this.props.meta.error) {\r\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\r\n        }\r\n\r\n        let warning;\r\n        if (this.props.meta.touched && this.props.meta.warning) {\r\n            warning = (\r\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"form-input\">\r\n                <label htmlFor={this.props.input.name}>\r\n                    {this.props.label}\r\n                    {error}\r\n                    {warning}\r\n                </label>\r\n                <input\r\n                    {...this.props.input}\r\n                    id={this.props.input.name}\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    ref={input => (this.input = input)}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, FieldArray, reduxForm} from 'redux-form';\r\nimport Input from './input';\r\nimport history from './history';\r\nimport './search-form.css';\r\n\r\n// --------- THIS FORM IS FOR THE USER TO ENTER A BUS NAME TO THEN RETRIVE IT'S REVIEWS --------\r\nclass SearchForm extends React.Component {\r\n\r\n  onSubmit(values) {\r\n    const name = values.busName;\r\n    console.log(\"Searching for shipping-time reviews on Business: \" + name);\r\n    history.push(`/reviews/${name}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchForm\">\r\n        <form onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\r\n          <label htmlFor=\"busName\"></label>\r\n          <Field component={Input} type=\"text\" name=\"busName\" id=\"busName\" placeholder=\"Amazon\"/>\r\n          <button type=\"submit\" disabled={ this.props.pristine || this.props.submitting} >Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    noData: state.busReviews.noData,\r\n    error: state.busReviews.error\r\n  };\r\n}\r\n\r\nSearchForm = connect(\r\n  mapStateToProps\r\n)(SearchForm);\r\n\r\n\r\nexport default reduxForm({\r\n  form: 'search' \r\n})(SearchForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SearchForm from './search-form';\r\n\r\nimport \"./search-page.css\"\r\n\r\n// ------------------ THIS IS THE SEARCH PAGE TO HOST THE SEARCH FORM ------------------ Used in components/Landing Page\r\nexport class SearchPage extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t        <div id=\"searchPage\">\r\n\t            <SearchForm />  \r\n\t        </div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.busReviews.reviews\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchPage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './landing-page.css';\r\nimport SearchPage from './search-page';\r\n\r\n// ------------------ THIS IS THE LANDING PAGE USERS FIRST SEE ------------------ Used in components/App\r\nexport class LandingPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing-page\">               \r\n        <div id=\"landing-header\">\r\n          <h2>Find Actual Shipping Times</h2>\r\n        </div>\r\n            \r\n        <section id=\"search-page\">\r\n          <SearchPage />   \r\n        </section>\r\n            \r\n        <section id=\"landing-description\">\r\n          <p>\r\n            <b>shipwhen?</b> is the largest worldwide shipping times directory to look up estimated vs. actual business shipping times, built by people like YOU, the users. We have the largest, most extensive business search available for finding shipping information. By sharing information that we receive, we are compiling a free and public shipping times directory of information on when items were ordered, estimated to arrive, and actually arrvied.  Thanks to our community, we are the new shipping times directory. You may use our site's free shipping times lookup service at any time.\r\n            <br/><br/>\r\n            <b>Find out average business shipping times.</b> Many companies often send misleading estimated shipping times. Lookup the Business Name to see what others have experienced.\r\n            <br/><br/>\r\n            <b>Leave positive OR negative reviews.</b> Make it known if a company exaggerated their shipping pace or if your item arrived on time. Leaving a review is the best way to make shipping times public and help others avoid having that special item arrive late!\r\n          </p>\r\n        </section>\r\n            \r\n        <footer>\r\n          <p>Copyright (\"c\") 2019 shipwhen? | All Rights Reserved</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.busReviews.reviews\r\n});\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","import React from 'react';\r\n\r\nimport './review.css';\r\n\r\nclass Review extends React.Component {\r\n    \r\n\trender() {\r\n\t    const estimated = new Date(this.props.estimate_date);\r\n\t    let arrived;\r\n\t    let status;\r\n\r\n\t    if(this.props.arrive_date) {\r\n\t      arrived = new Date(this.props.arrive_date);\r\n\t            \r\n\t            if (arrived.getTime() === estimated.getTime()) {\r\n\t                status = <span id=\"blue\">On Time</span>;\r\n\t            }\r\n\t            else if (arrived > estimated) {\r\n\t                status = <span id=\"orange\">Late</span>;\r\n\t            }\r\n\t            else status = <span id=\"green\">Early</span>;\r\n\t    }\r\n\t    else {\r\n\t    \tstatus = <span id=\"red\">N/A</span>;\r\n\t    }\r\n\r\n    \treturn (\r\n\t\t\t<div className=\"reviewPage\">\r\n\t\t\t\t<div className=\"indivReview\">\r\n\t\t\t\t\t<div className=\"revDetails\">\r\n\t\t\t\t\t\t<p className=\"one\">{this.props.created_by}</p>\r\n\t\t\t\t\t\t<p className=\"two\">{this.props.date_created}</p>\r\n\t\t\t\t\t\t<p className=\"three status\">{status}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"hr\"><hr /></div>\r\n\t\t\t\t\t<p>Business: {this.props.bus_name}</p>\r\n\t\t\t\t\t<p>Delivery Type: {this.props.delivery}</p>\r\n\t\t\t\t\t<p>Ordered On: {this.props.order_date}</p>\r\n\t\t\t\t\t<p>Estimated to Arrive: {this.props.estimate_date}</p>\r\n\t\t\t\t\t<p>Package Arrived: {this.props.arrive ? \"Arrived\" : \"Didn't Arrive\"}</p>\r\n\t\t\t\t\t<p>Arrival Date: {this.props.arrive_date ? this.props.arrive_date : \"N/A\"}</p>\r\n\t\t\t\t</div> \r\n\t\t\t</div>\r\n    \t);\r\n    };\r\n};\r\n\r\nexport default Review;","import React from 'react';\r\n\r\n// THIS PAGE IS USED IN REVIEW-FORM.JS\r\nexport const Select = props => {\r\n  const renderSelectOptions = (key, index) => {\r\n    return (\r\n      <option\r\n        key={`${index}-${key}`}\r\n        value={key}\r\n      >\r\n        {props.options[key]}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  if (props && props.options) {\r\n    return (\r\n      <div className=\"mv3 w-100\">\r\n        <div className=\"b sans-serif pv2 w-100\">{props.label}</div>\r\n        <select {...props.input} className=\"pa2 input-reset ba b--black-40 w-100\">\r\n          <option value=\"\">Select</option>\r\n          {Object.keys(props.options).map(renderSelectOptions)}\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n  return <div></div>\r\n}\r\n\r\nexport default Select;","export const required = value => (value ? undefined : 'Required');\r\nexport const nonEmpty = value =>\r\n    value.trim() !== '' ? undefined : 'Cannot be empty';\r\nexport const isTrimmed = value =>\r\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\r\nexport const length = length => value => {\r\n    if (length.min && value.length < length.min) {\r\n        return `Must be at least ${length.min} characters long`;\r\n    }\r\n    if (length.max && value.length > length.max) {\r\n        return `Must be at most ${length.max} characters long`;\r\n    }\r\n};\r\nexport const matches = field => (value, allValues) =>\r\n    field in allValues && value.trim() === allValues[field].trim()\r\n        ? undefined\r\n        : 'Does not match';\r\nexport const email = value =>\r\n    /^\\S+@\\S+$/.test(value) ? undefined : 'Must be a valid email address';","\r\nimport {API_BASE_URL} from '../config';\r\nimport {SubmissionError} from 'redux-form';\r\nimport {normalizeResponseErrors} from './utils';\r\nimport history from '../components/history';\r\n\r\nconst token = localStorage.getItem('authToken');\r\n\r\n\r\nexport const FETCH_BUS_REQUEST = 'FETCH_BUS_REQUEST';\r\nexport const fetchBusRequest = loading => ({\r\n    type: FETCH_BUS_REQUEST,\r\n    loading: true\r\n});\r\n\r\nexport const FETCH_BUS_SUCCESS = 'FETCH_BUS_SUCCESS';\r\nexport const fetchBusSuccess = (reviews) => ({\r\n    type: FETCH_BUS_SUCCESS,\r\n    loading: false,\r\n    noData: false,\r\n    reviews\r\n});\r\n\r\nexport const FETCH_BUS_ERROR = 'FETCH_BUS_ERROR';\r\nexport const fetchBusError = (error) => ({\r\n    type: FETCH_BUS_ERROR,\r\n    loading: false,\r\n    error: \"Something went wrong\"\r\n});\r\n\r\n// TRYING TO HANDLE SERVER RESPONSE THAT IS EMPTY\r\nexport const FETCH_BUS_NODATA = 'FETCH_BUS_NODATA';\r\nexport const fetchBusNoData = (bus_name) => ({\r\n    type: FETCH_BUS_NODATA,\r\n    loading: false,\r\n    noData: true,\r\n    bus_name\r\n});\r\n\r\nexport const FETCH_REVIEW_ERROR = 'FETCH_REVIEW_ERROR';\r\nexport const fetchReviewError = () => ({\r\n    type: FETCH_REVIEW_ERROR,\r\n    loading: false,\r\n    submitSucceeded: \"no\"\r\n});\r\n\r\nexport const FETCH_REVIEW_SUCCESS = 'FETCH_REVIEW_SUCCESS';\r\nexport const fetchReviewSuccess = () => ({\r\n    type: FETCH_REVIEW_ERROR,\r\n    loading: false,\r\n    submitSucceeded: \"yes\"\r\n});\r\n\r\n\r\n\r\n// ---------------- GET THE BUSINESS'S REVIEWS FROM SERVER -------------- Used in components/landing-page\r\nexport const getBus = (bus_name) => dispatch => {\r\n    dispatch(fetchBusRequest());\r\n    return (\r\n        fetch(`${API_BASE_URL}/reviews/${bus_name}`, {\r\n            method: 'GET',\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(res => {\r\n            if (res.length === 0) {\r\n                console.log(\"No Business shipping-time review(s) found\");\r\n                dispatch(fetchBusNoData(`${bus_name}`))\r\n                history.push(\"/no-business\")\r\n                .then(err => Promise.reject());\r\n            }\r\n            return res\r\n        })\r\n        .then(bus => {\r\n            console.log(\"Found Business shipping-time review(s) successfully\");\r\n            console.log(bus);\r\n            dispatch(fetchBusSuccess(bus))\r\n            history.push(`/reviews/${bus_name}`);\r\n        })\r\n        .catch(err => {\r\n             dispatch(fetchBusError());\r\n        })\r\n    );\r\n};\r\n\r\n// ---------------- POST THE A BUSINESS REVIEW TO SERVER -------------- Used in components/add-review\r\nexport const submitReview = (values, user) => dispatch => {\r\n    values.user = user;\r\n    return (\r\n        fetch(`${API_BASE_URL}/reviews`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                dataType: 'json'\r\n            })\r\n            .then(res => {\r\n                    if (!res.ok) {\r\n                        console.log(\"Could not submit shipping-time review\");\r\n                        dispatch(fetchReviewError());\r\n                        if (\r\n                            res.headers.has('content-type') &&\r\n                            res.headers\r\n                                .get('content-type')\r\n                                .startsWith('application/json')\r\n                        ) {\r\n                            // It's a nice JSON error returned by us, so decode it\r\n                            return res.json().then(err => Promise.reject(err));\r\n                        }\r\n                        // It's a less informative error returned by express\r\n                        return Promise.reject({\r\n                            code: res.status,\r\n                            message: res.statusText\r\n                        });\r\n                    }\r\n                    return;\r\n                })\r\n                .then(res => {\r\n                    console.log(\"Submitted shipping-time review successfully\");\r\n                    dispatch(fetchReviewSuccess());\r\n                    dispatch(getBus(`${values.bus_name}`));\r\n                })\r\n                .catch(err => {\r\n                    const {reason, message, location} = err;\r\n                    if (reason === 'ValidationError') {\r\n                        // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n                        return Promise.reject(\r\n                            new SubmissionError({\r\n                                [location]: message\r\n                            })\r\n                        );\r\n                    }\r\n                    return Promise.reject(\r\n                        new SubmissionError({\r\n                            _error: 'Error submitting message'\r\n                        })\r\n                    );\r\n                })\r\n    );\r\n};","import React from 'react';\r\nimport {reduxForm, Field, SubmissionError, focus, formValueSelector} from 'redux-form';\r\nimport Input from './input';\r\nimport Select from './select';\r\nimport {required, nonEmpty} from '../validators';\r\nimport {submitReview} from '../actions/bus-reviews';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './review-form.css';\r\n\r\n\r\n// ---------------- THIS FORM IS FOR USERS TO ADD A BUSINESS SHIPPING REVIEW -------------- Used in components/bus-page\r\nclass AddReviewForm extends React.Component {\r\n    onSubmit(values, user) {\r\n        console.log(\"submitting review form\");\r\n        console.log(values);\r\n        this.props.toggleForm();\r\n        return this.props.dispatch(submitReview(values, user));\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.submitSucceeded);\r\n        let errorMessage;\r\n        let successMessage;\r\n\r\n        if (this.props.submitSucceeded !== null && !this.props.submitSucceeded) {\r\n            errorMessage = (\r\n                <div className=\"message message-error\">\r\n                    Please try again\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if (this.props.submitSucceeded === true) {\r\n           successMessage = (\r\n                <div className=\"message message-success\">\r\n                    Review submitted successfully\r\n                </div>\r\n            ); \r\n        }\r\n        \r\n\r\n        const user = this.props.created_by.username;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <form id=\"reviewForm\" className=\"review-form\" onSubmit={this.props.handleSubmit(values => this.onSubmit(values, user))}>\r\n                    {errorMessage && errorMessage}\r\n                    {successMessage && successMessage}\r\n\r\n                    <label htmlFor=\"bus_name\">Business Name</label>\r\n                    <Field component={Input} type=\"text\" name=\"bus_name\" placeholder=\"Amazon\" validate={[required, nonEmpty]} />\r\n                    \r\n                    <label htmlFor=\"delivery\">Delivery Type</label>\r\n                    <Field component={Select} type=\"select\" name=\"delivery\" validate={[required, nonEmpty]}\r\n                        options={{\r\n                            Standard: \"Standard\",\r\n                            \"First-class\": \"First Class\",\r\n                            \"Two-day\": \"Two Day\",\r\n                            Overnight: \"Overnight\"\r\n                        }}\r\n                    />\r\n                    \r\n                    <label htmlFor=\"order_date\">Ordered On</label>\r\n                    <Field component={Input} type=\"Date\" name=\"order_date\" validate={[required, nonEmpty]} />\r\n                    \r\n                    <label htmlFor=\"estimate_date\">Estimated to Arrive</label>\r\n                    <Field component={Input} type=\"Date\" name=\"estimate_date\" validate={[required, nonEmpty]} />\r\n                                 \r\n                    <label htmlFor=\"arrive\">Package Arrived</label>\r\n                    <Field component={Input} type=\"checkbox\" name=\"arrive\" />\r\n\r\n                    { this.props.arrive && (\r\n                        <>\r\n                            <label id=\"arrive-date-label\" htmlFor=\"arrive_date\">Arrival Date</label>\r\n                            <Field component={Input} type=\"Date\" name=\"arrive_date\" />\r\n                        </>\r\n                    ) }     \r\n\r\n                    <button type=\"submit\" disabled={this.props.pristine || this.props.submitting}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nAddReviewForm = reduxForm({\r\n  form: 'reviewForm'\r\n})(AddReviewForm);\r\n\r\nconst selector = formValueSelector('reviewForm');\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    created_by: state.auth.currentUser,\r\n    submitSucceeded: state.busReviews.submitSucceeded,\r\n    arrive: selector(state, 'arrive')\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(AddReviewForm);\r\n","import React from 'react';\r\nimport AddReviewForm from './review-form';\r\nimport './show-hide.css';\r\n\r\nclass ShowHideReview extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showReview: false\r\n    };\r\n  };\r\n\r\n  toggleForm = () => {\r\n    this.setState({showReview: !this.state.showReview});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"showHideBody\">\r\n        <div className=\"addButton\" onClick={() => this.setState({showReview: !this.state.showReview})}>\r\n          <i className=\"fas fa-plus\"></i>\r\n        </div>\r\n        { this.state.showReview ? <AddReviewForm toggleForm={this.toggleForm} /> : null }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ShowHideReview;","import React from 'react';\r\nimport './need-login.css';\r\n\r\nclass NeedLogin extends React.Component {\r\n\r\n\trender() {\r\n    \treturn (\r\n    \t\t<div className=\"needLogin\">\r\n\t\t\t\t<h3>Must Login to Submit a Review</h3>\r\n      \t\t</div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nexport default NeedLogin;","import React from 'react';\r\nimport NeedLogin from './need-login';\r\nimport './show-hide.css';\r\n\r\nclass ShowHideNeedLogin extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showNeedLogin: false\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"showHideBody\">\r\n        <div className=\"addButton\" onClick={() => this.setState({showNeedLogin: !this.state.showNeedLogin})}>\r\n          <i className=\"fas fa-plus\"></i>\r\n        </div>\r\n        { this.state.showNeedLogin ? <NeedLogin /> : null }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ShowHideNeedLogin;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ShowHideReview from './show-hide-review';\r\nimport ShowHideNeedLogin from './show-hide-need-login';\r\n// import './review-toggle-page.css';\r\n\r\nclass ReviewTogglePage extends React.Component {\r\n\r\n\trender() {\r\n    \treturn (\r\n\t        <div className=\"review-toggle-page\">\r\n\t            { this.props.created_by ? < ShowHideReview /> : <ShowHideNeedLogin /> }  \r\n\t        </div>\r\n    \t);\r\n  \t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    created_by: state.auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(ReviewTogglePage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Review from './review';\r\nimport ReviewTogglePage from './review-toggle-page';\r\nimport {getBus} from '../actions/bus-reviews';\r\n\r\nimport './bus-page.css';\r\n\r\nclass BusPage extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst bus = this.props.match.params.bus_name;\r\n\t\tthis.props.dispatch(getBus(bus));\r\n\t}\r\n\r\n\trender() {\r\n\t    const reviews = this.props.reviews.map((review, index) => (\r\n\t        <li className=\"review-wrapper\" key={index}>\r\n\t            <Review index={index} {...review} />\r\n\t        </li>\r\n\t    ));\r\n\r\n\t    return (\r\n\t        <div className=\"busPage\">\r\n\t            <h1>Reviews for {this.props.match.params.bus_name}</h1>\r\n\t            <ul className=\"reviews1\">\r\n\t                {reviews}\r\n\t            </ul>\r\n\t            <section id=\"review-page\">\r\n\t                < ReviewTogglePage />\t\t\t\r\n\t\t\t\t</section>\r\n\t        </div>\r\n\t    );\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    reviews: state.busReviews.reviews,\r\n    created_by: state.auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(BusPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReviewTogglePage from './review-toggle-page';\r\nimport './no-bus-error.css';\r\n\r\nclass NoBusError extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"noBus-content\">\r\n\t\t\t\t<div className=\"noBus-text\">\r\n\t\t\t\t\t<h1>{this.props.busName}</h1>\r\n\t\t        \t<img src=\"no-data\" alt=\"\" />\r\n\t\t        \t<h2>No shipping-time reviews found</h2>\r\n\t\t        \t<p>Click the \"plus\" icon below to submit a review and help out your community</p>\r\n\t        \t</div>\r\n\t        \t<section id=\"review-page\">\r\n\t\t\t\t\t< ReviewTogglePage />\r\n\t\t\t\t</section>\r\n      \t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tbusName: state.busReviews.bus_name\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(NoBusError);\r\n","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport Input from './input';\r\nimport {login} from '../actions/auth';\r\nimport {required, nonEmpty} from '../validators';\r\nimport './login-form.css';\r\n\r\n\r\n// ---------------- THIS IS THE FORM FOR USERS TO LOGIN --------------\r\n\r\nexport class LoginForm extends React.Component {\r\n    onSubmit(values) {\r\n        return this.props.dispatch(login(values.username, values.password));\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.error) {\r\n            error = (\r\n                <div className=\"form-error\" aria-live=\"polite\">\r\n                    {this.props.error}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"login\">\r\n                <form className=\"login-form\" onSubmit={this.props.handleSubmit(values =>\r\n                    this.onSubmit(values))}>\r\n                    {error}\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <br/>\r\n                    <Field component={Input} type=\"text\" name=\"username\" id=\"username\" placeholder=\"username\" validate={[required, nonEmpty]} />\r\n                    \r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <br/>\r\n                    <Field component={Input} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\"validate={[required, nonEmpty]} />\r\n                    <button disabled={this.props.pristine || this.props.submitting}> Log In </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'login',\r\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\r\n})(LoginForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport LoginForm from './login-form';\r\nimport './login-page.css';\r\n\r\nexport function LoginPage(props) {\r\n\t\r\n\tif (props.loggedIn) {\r\n   \t\treturn <Redirect to=\"/\" />;\r\n    }\r\n    \r\n\treturn (\r\n\t    <div className=\"login-page\">\r\n\t        <h1>Welcome.</h1>\r\n\t        <p><b> Leaving a Shipping Time Review Helps Users Like You! </b></p>\r\n\t        <LoginForm /> \r\n\t    </div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(LoginPage);","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport {registerUser} from '../actions/users';\r\nimport {login} from '../actions/auth';\r\nimport Input from './input';\r\nimport {required, nonEmpty, matches, length, isTrimmed} from '../validators';\r\nimport './signup-form.css';\r\n\r\nconst passwordLength = length({min: 7, max: 72});\r\nconst matchesPassword = matches('password');\r\n\r\nexport class SignupForm extends React.Component {\r\n    onSubmit(values) {\r\n        const {username, password, firstName, lastName, email} = values;\r\n        const user = {username, password, firstName, lastName, email};\r\n        return this.props\r\n            .dispatch(registerUser(user))\r\n            .then(() => this.props.dispatch(login(username, password)));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"signup\">\r\n                <form\r\n                    className=\"signup-form\"\r\n                    onSubmit={this.props.handleSubmit(values =>\r\n                        this.onSubmit(values)\r\n                    )}>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <Field component={Input} type=\"text\" placeholder=\"first\" name=\"firstName\" />\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <Field component={Input} type=\"text\" placeholder=\"last\" name=\"lastName\" />\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        validate={[required, nonEmpty, isTrimmed]}\r\n                    />\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <Field component={Input} type=\"email\" placeholder=\"email@email.com\" name=\"email\" validate={[required]} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        validate={[required, passwordLength, isTrimmed]}\r\n                    />\r\n                    <label htmlFor=\"passwordConfirm\">Confirm Password</label>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"password\"\r\n                        name=\"passwordConfirm\"\r\n                        placeholder=\"re-type password\"\r\n                        validate={[required, nonEmpty, matchesPassword]}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={this.props.pristine || this.props.submitting}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'registration',\r\n    onSubmitFail: (errors, dispatch) =>\r\n        dispatch(focus('registration', Object.keys(errors)[0]))\r\n})(SignupForm);\r\n","import {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const registerUser = user => dispatch => {\r\n    return fetch(`${API_BASE_URL}/users`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            const {reason, message, location} = err;\r\n            if (reason === 'ValidationError') {\r\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        [location]: message\r\n                    })\r\n                );\r\n            }\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport SignupForm from './signup-form';\r\nimport './signup-page.css';\r\n\r\nexport function SignUpPage(props) {\r\n\tif (props.loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n\treturn (\r\n\t  <div className=\"signup-page\">\r\n      <div className=\"colContainer\">\r\n        <div className=\"col-6 one\">\r\n          <h1>Find Actual Business Shipping Times</h1>\r\n          <img alt=\"shipping truck\" src=\"https://cdn2.iconfinder.com/data/icons/blue-transports-3/262/Untitled-2-512.png\" />\r\n        </div>\r\n        <div className=\"col-6\" id=\"colTwo\">\r\n          <h2>sign up to post helpful reviews</h2>\r\n          <SignupForm /> \r\n        </div>\r\n      </div>\r\n    </div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignUpPage);","import {\r\n    SET_AUTH_TOKEN,\r\n    CLEAR_AUTH,\r\n    AUTH_REQUEST,\r\n    AUTH_SUCCESS,\r\n    AUTH_ERROR\r\n} from '../actions/auth';\r\n\r\nconst initialState = {\r\n    authToken: null, // authToken !== null does not mean it has been validated\r\n    currentUser: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === SET_AUTH_TOKEN) {\r\n        return Object.assign({}, state, {\r\n            authToken: action.authToken\r\n        });\r\n    } else if (action.type === CLEAR_AUTH) {\r\n        return Object.assign({}, state, {\r\n            authToken: null,\r\n            currentUser: null\r\n        });\r\n    } else if (action.type === AUTH_REQUEST) {\r\n        return Object.assign({}, state, {\r\n            loading: true,\r\n            error: null\r\n        });\r\n    } else if (action.type === AUTH_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            currentUser: action.currentUser\r\n        });\r\n    } else if (action.type === AUTH_ERROR) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}","import {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\r\nexport const fetchProtectedDataSuccess = data => ({\r\n    type: FETCH_PROTECTED_DATA_SUCCESS,\r\n    data\r\n});\r\n\r\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\r\nexport const fetchProtectedDataError = error => ({\r\n    type: FETCH_PROTECTED_DATA_ERROR,\r\n    error\r\n});\r\n\r\nexport const fetchProtectedData = () => (dispatch, getState) => {\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/protected`, {\r\n        method: 'GET',\r\n        headers: {\r\n            // Provide our auth token as credentials\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then(({data}) => dispatch(fetchProtectedDataSuccess(data)))\r\n        .catch(err => {\r\n            dispatch(fetchProtectedDataError(err));\r\n        });\r\n};","import {\r\n    FETCH_PROTECTED_DATA_SUCCESS,\r\n    FETCH_PROTECTED_DATA_ERROR\r\n} from '../actions/protected-data';\r\n\r\nconst initialState = {\r\n    data: '',\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            data: action.data,\r\n            error: null\r\n        });\r\n    } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\r\n        return Object.assign({}, state, {\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}","\r\nimport * as actions from '../actions/bus-reviews';\r\n\r\nconst initialState = {\r\n    bus_name: null,\r\n    reviews: [],\r\n    error: null,\r\n    submitSucceeded: null,\r\n    noData: null,\r\n    loading: null\r\n};\r\n\r\nexport default function busReviewsReducer(state=initialState, action) {\r\n    if (action.type === actions.FETCH_BUS_REQUEST) {\r\n        return { ...state,\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n    if (action.type === actions.FETCH_BUS_ERROR) {\r\n        return Object.assign({}, state, {\r\n            reviews: [null],\r\n            loading: action.loading,\r\n            error: action.error\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_REVIEW_ERROR) {\r\n        return Object.assign({}, state, {\r\n            loading: action.loading,\r\n            submitSucceeded: action.submitSucceeded\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_BUS_NODATA) {\r\n        return Object.assign({}, state, {\r\n            bus_name: action.bus_name,\r\n            loading: action.loading,\r\n            noData: action.noData\r\n        })\r\n    }\r\n    if (action.type === actions.FETCH_REVIEW_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            loading: action.loading,\r\n            submitSucceeded: action.submitSucceeded\r\n        })\r\n    }\r\n    else if (action.type === actions.FETCH_BUS_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            reviews: action.reviews,\r\n            loading: action.loading\r\n        })\r\n    }\r\n    return state;\r\n};","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport {loadAuthToken} from './local-storage';\r\nimport authReducer from './reducers/auth';\r\nimport protectedDataReducer from './reducers/protected-data';\r\nimport {setAuthToken, refreshAuthToken} from './actions/auth';\r\nimport busReviewsReducer from './reducers/bus-reviews';\r\n\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        form: formReducer,\r\n        auth: authReducer,\r\n        protectedData: protectedDataReducer,\r\n        busReviews: busReviewsReducer\r\n    }),\r\n    applyMiddleware(thunk)\r\n);\r\n\r\n// Hydrate the authToken from localStorage if it exist\r\nconst authToken = loadAuthToken();\r\nif (authToken) {\r\n    const token = authToken;\r\n    store.dispatch(setAuthToken(token));\r\n    store.dispatch(refreshAuthToken());\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/app';\nimport store from './store';\nimport './index.css';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport history from './history';\r\nimport HeaderBar from './header-bar';\r\nimport LandingPage from './landing-page';\r\nimport BusPage from './bus-page';\r\nimport NoBusError from './no-bus-error';\r\nimport LoginPage from './login-page';\r\nimport SignupPage from './signup-page';\r\n\r\nimport './app.css';\r\n\r\n// ---------------------- THIS IS MY ROOT COMPONENT ----------------------- Used in index.js\r\nexport default function App(props) {\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <div className=\"app\">\r\n                <header>\r\n                    <HeaderBar />\r\n                </header>\r\n\r\n                <main>\r\n                    <Route exact path=\"/\" component={LandingPage} />\r\n                    <Route exact path=\"/reviews/:bus_name\" component={BusPage} />\r\n                    <Route exact path=\"/no-business\" component={NoBusError} />                        \r\n                    <Route exact path=\"/login-page\" component={LoginPage} />\r\n                    <Route exact path=\"/signup-page\" component={SignupPage} />\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n"],"sourceRoot":""}